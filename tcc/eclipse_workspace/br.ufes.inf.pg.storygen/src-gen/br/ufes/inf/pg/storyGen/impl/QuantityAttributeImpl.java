/**
 * generated by Xtext 2.17.0
 */
package br.ufes.inf.pg.storyGen.impl;

import br.ufes.inf.pg.storyGen.AttributeSetting;
import br.ufes.inf.pg.storyGen.IntegerTerm;
import br.ufes.inf.pg.storyGen.QuantityAttribute;
import br.ufes.inf.pg.storyGen.StoryGenPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Quantity Attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufes.inf.pg.storyGen.impl.QuantityAttributeImpl#getInitValue <em>Init Value</em>}</li>
 *   <li>{@link br.ufes.inf.pg.storyGen.impl.QuantityAttributeImpl#getSetting <em>Setting</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QuantityAttributeImpl extends AttributeImpl implements QuantityAttribute
{
  /**
   * The cached value of the '{@link #getInitValue() <em>Init Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitValue()
   * @generated
   * @ordered
   */
  protected IntegerTerm initValue;

  /**
   * The cached value of the '{@link #getSetting() <em>Setting</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSetting()
   * @generated
   * @ordered
   */
  protected AttributeSetting setting;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QuantityAttributeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StoryGenPackage.Literals.QUANTITY_ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegerTerm getInitValue()
  {
    return initValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInitValue(IntegerTerm newInitValue, NotificationChain msgs)
  {
    IntegerTerm oldInitValue = initValue;
    initValue = newInitValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StoryGenPackage.QUANTITY_ATTRIBUTE__INIT_VALUE, oldInitValue, newInitValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInitValue(IntegerTerm newInitValue)
  {
    if (newInitValue != initValue)
    {
      NotificationChain msgs = null;
      if (initValue != null)
        msgs = ((InternalEObject)initValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StoryGenPackage.QUANTITY_ATTRIBUTE__INIT_VALUE, null, msgs);
      if (newInitValue != null)
        msgs = ((InternalEObject)newInitValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StoryGenPackage.QUANTITY_ATTRIBUTE__INIT_VALUE, null, msgs);
      msgs = basicSetInitValue(newInitValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StoryGenPackage.QUANTITY_ATTRIBUTE__INIT_VALUE, newInitValue, newInitValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AttributeSetting getSetting()
  {
    return setting;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSetting(AttributeSetting newSetting, NotificationChain msgs)
  {
    AttributeSetting oldSetting = setting;
    setting = newSetting;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StoryGenPackage.QUANTITY_ATTRIBUTE__SETTING, oldSetting, newSetting);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSetting(AttributeSetting newSetting)
  {
    if (newSetting != setting)
    {
      NotificationChain msgs = null;
      if (setting != null)
        msgs = ((InternalEObject)setting).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StoryGenPackage.QUANTITY_ATTRIBUTE__SETTING, null, msgs);
      if (newSetting != null)
        msgs = ((InternalEObject)newSetting).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StoryGenPackage.QUANTITY_ATTRIBUTE__SETTING, null, msgs);
      msgs = basicSetSetting(newSetting, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StoryGenPackage.QUANTITY_ATTRIBUTE__SETTING, newSetting, newSetting));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StoryGenPackage.QUANTITY_ATTRIBUTE__INIT_VALUE:
        return basicSetInitValue(null, msgs);
      case StoryGenPackage.QUANTITY_ATTRIBUTE__SETTING:
        return basicSetSetting(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StoryGenPackage.QUANTITY_ATTRIBUTE__INIT_VALUE:
        return getInitValue();
      case StoryGenPackage.QUANTITY_ATTRIBUTE__SETTING:
        return getSetting();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StoryGenPackage.QUANTITY_ATTRIBUTE__INIT_VALUE:
        setInitValue((IntegerTerm)newValue);
        return;
      case StoryGenPackage.QUANTITY_ATTRIBUTE__SETTING:
        setSetting((AttributeSetting)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StoryGenPackage.QUANTITY_ATTRIBUTE__INIT_VALUE:
        setInitValue((IntegerTerm)null);
        return;
      case StoryGenPackage.QUANTITY_ATTRIBUTE__SETTING:
        setSetting((AttributeSetting)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StoryGenPackage.QUANTITY_ATTRIBUTE__INIT_VALUE:
        return initValue != null;
      case StoryGenPackage.QUANTITY_ATTRIBUTE__SETTING:
        return setting != null;
    }
    return super.eIsSet(featureID);
  }

} //QuantityAttributeImpl
