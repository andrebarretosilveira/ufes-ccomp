/**
 * generated by Xtext 2.17.0
 */
package br.ufes.inf.pg.storyGen.impl;

import br.ufes.inf.pg.storyGen.Event;
import br.ufes.inf.pg.storyGen.Order;
import br.ufes.inf.pg.storyGen.OrderCondition;
import br.ufes.inf.pg.storyGen.StoryGenPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Order Condition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufes.inf.pg.storyGen.impl.OrderConditionImpl#getOrder <em>Order</em>}</li>
 *   <li>{@link br.ufes.inf.pg.storyGen.impl.OrderConditionImpl#getEvent <em>Event</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OrderConditionImpl extends ConditionImpl implements OrderCondition
{
  /**
   * The default value of the '{@link #getOrder() <em>Order</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrder()
   * @generated
   * @ordered
   */
  protected static final Order ORDER_EDEFAULT = Order.AFTER;

  /**
   * The cached value of the '{@link #getOrder() <em>Order</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrder()
   * @generated
   * @ordered
   */
  protected Order order = ORDER_EDEFAULT;

  /**
   * The cached value of the '{@link #getEvent() <em>Event</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvent()
   * @generated
   * @ordered
   */
  protected Event event;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OrderConditionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StoryGenPackage.Literals.ORDER_CONDITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Order getOrder()
  {
    return order;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOrder(Order newOrder)
  {
    Order oldOrder = order;
    order = newOrder == null ? ORDER_EDEFAULT : newOrder;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StoryGenPackage.ORDER_CONDITION__ORDER, oldOrder, order));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Event getEvent()
  {
    if (event != null && event.eIsProxy())
    {
      InternalEObject oldEvent = (InternalEObject)event;
      event = (Event)eResolveProxy(oldEvent);
      if (event != oldEvent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, StoryGenPackage.ORDER_CONDITION__EVENT, oldEvent, event));
      }
    }
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Event basicGetEvent()
  {
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEvent(Event newEvent)
  {
    Event oldEvent = event;
    event = newEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StoryGenPackage.ORDER_CONDITION__EVENT, oldEvent, event));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StoryGenPackage.ORDER_CONDITION__ORDER:
        return getOrder();
      case StoryGenPackage.ORDER_CONDITION__EVENT:
        if (resolve) return getEvent();
        return basicGetEvent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StoryGenPackage.ORDER_CONDITION__ORDER:
        setOrder((Order)newValue);
        return;
      case StoryGenPackage.ORDER_CONDITION__EVENT:
        setEvent((Event)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StoryGenPackage.ORDER_CONDITION__ORDER:
        setOrder(ORDER_EDEFAULT);
        return;
      case StoryGenPackage.ORDER_CONDITION__EVENT:
        setEvent((Event)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StoryGenPackage.ORDER_CONDITION__ORDER:
        return order != ORDER_EDEFAULT;
      case StoryGenPackage.ORDER_CONDITION__EVENT:
        return event != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (order: ");
    result.append(order);
    result.append(')');
    return result.toString();
  }

} //OrderConditionImpl
