/*
 * generated by Xtext 2.17.0
 */
grammar InternalStoryGen;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.ufes.inf.pg.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.ufes.inf.pg.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.ufes.inf.pg.services.StoryGenGrammarAccess;

}

@parser::members {

 	private StoryGenGrammarAccess grammarAccess;

    public InternalStoryGenParser(TokenStream input, StoryGenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Story";
   	}

   	@Override
   	protected StoryGenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleStory
entryRuleStory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoryRule()); }
	iv_ruleStory=ruleStory
	{ $current=$iv_ruleStory.current; }
	EOF;

// Rule Story
ruleStory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryAccess().getDataStoryDataParserRuleCall_0_0());
				}
				lv_data_0_0=ruleStoryData
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryRule());
					}
					set(
						$current,
						"data",
						lv_data_0_0,
						"br.ufes.inf.pg.StoryGen.StoryData");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryAccess().getSpaceSpaceParserRuleCall_1_0());
				}
				lv_space_1_0=ruleSpace
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryRule());
					}
					set(
						$current,
						"space",
						lv_space_1_0,
						"br.ufes.inf.pg.StoryGen.Space");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryAccess().getPlotPlotParserRuleCall_2_0());
				}
				lv_plot_2_0=rulePlot
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryRule());
					}
					set(
						$current,
						"plot",
						lv_plot_2_0,
						"br.ufes.inf.pg.StoryGen.Plot");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStoryData
entryRuleStoryData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoryDataRule()); }
	iv_ruleStoryData=ruleStoryData
	{ $current=$iv_ruleStoryData.current; }
	EOF;

// Rule StoryData
ruleStoryData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStoryDataAccess().getStoryDataAction_0(),
					$current);
			}
		)
		otherlv_1='Story'
		{
			newLeafNode(otherlv_1, grammarAccess.getStoryDataAccess().getStoryKeyword_1());
		}
		otherlv_2='data'
		{
			newLeafNode(otherlv_2, grammarAccess.getStoryDataAccess().getDataKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getStoryDataAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryDataAccess().getAttributesAttributeParserRuleCall_4_0());
				}
				lv_attributes_4_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryDataRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_4_0,
						"br.ufes.inf.pg.StoryGen.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getStoryDataAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSpace
entryRuleSpace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceRule()); }
	iv_ruleSpace=ruleSpace
	{ $current=$iv_ruleSpace.current; }
	EOF;

// Rule Space
ruleSpace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpaceAccess().getSpaceAction_0(),
					$current);
			}
		)
		otherlv_1='Space'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpaceAccess().getSpaceKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpaceAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpaceAccess().getExistentsExistentParserRuleCall_3_0());
				}
				lv_existents_3_0=ruleExistent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpaceRule());
					}
					add(
						$current,
						"existents",
						lv_existents_3_0,
						"br.ufes.inf.pg.StoryGen.Existent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSpaceAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePlot
entryRulePlot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlotRule()); }
	iv_rulePlot=rulePlot
	{ $current=$iv_rulePlot.current; }
	EOF;

// Rule Plot
rulePlot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPlotAccess().getPlotAction_0(),
					$current);
			}
		)
		otherlv_1='Plot'
		{
			newLeafNode(otherlv_1, grammarAccess.getPlotAccess().getPlotKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPlotAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPlotAccess().getEventsEventParserRuleCall_3_0());
				}
				lv_events_3_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlotRule());
					}
					add(
						$current,
						"events",
						lv_events_3_0,
						"br.ufes.inf.pg.StoryGen.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPlotAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleExistent
entryRuleExistent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistentRule()); }
	iv_ruleExistent=ruleExistent
	{ $current=$iv_ruleExistent.current; }
	EOF;

// Rule Existent
ruleExistent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExistentAccess().getActorParserRuleCall_0());
		}
		this_Actor_0=ruleActor
		{
			$current = $this_Actor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExistentAccess().getObjectParserRuleCall_1());
		}
		this_Object_1=ruleObject
		{
			$current = $this_Object_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_playable_0_0='player'
				{
					newLeafNode(lv_playable_0_0, grammarAccess.getActorAccess().getPlayablePlayerKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed($current, "playable", true, "player");
				}
			)
		)?
		otherlv_1='actor'
		{
			newLeafNode(otherlv_1, grammarAccess.getActorAccess().getActorKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getActorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='name:'
		{
			newLeafNode(otherlv_4, grammarAccess.getActorAccess().getNameKeyword_4());
		}
		(
			(
				lv_displayName_5_0=RULE_STRING
				{
					newLeafNode(lv_displayName_5_0, grammarAccess.getActorAccess().getDisplayNameSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed(
						$current,
						"displayName",
						lv_displayName_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getAttributesAttributeParserRuleCall_6_0());
				}
				lv_attributes_6_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_6_0,
						"br.ufes.inf.pg.StoryGen.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getActorAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleObject
entryRuleObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectRule()); }
	iv_ruleObject=ruleObject
	{ $current=$iv_ruleObject.current; }
	EOF;

// Rule Object
ruleObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='object'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectAccess().getObjectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectAccess().getAttributesAttributeParserRuleCall_3_0());
				}
				lv_attributes_3_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_3_0,
						"br.ufes.inf.pg.StoryGen.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getFactAttributeParserRuleCall_0());
		}
		this_FactAttribute_0=ruleFactAttribute
		{
			$current = $this_FactAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getQuantityAttributeParserRuleCall_1());
		}
		this_QuantityAttribute_1=ruleQuantityAttribute
		{
			$current = $this_QuantityAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFactAttribute
entryRuleFactAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactAttributeRule()); }
	iv_ruleFactAttribute=ruleFactAttribute
	{ $current=$iv_ruleFactAttribute.current; }
	EOF;

// Rule FactAttribute
ruleFactAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fact'
		{
			newLeafNode(otherlv_0, grammarAccess.getFactAttributeAccess().getFactKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFactAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFactAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getFactAttributeAccess().getEqualsSignKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFactAttributeAccess().getInitValueBooleanTermParserRuleCall_3_0_0());
					}
					lv_initValue_3_0=ruleBooleanTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactAttributeRule());
						}
						set(
							$current,
							"initValue",
							lv_initValue_3_0,
							"br.ufes.inf.pg.StoryGen.BooleanTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_4='('
				{
					newLeafNode(otherlv_4, grammarAccess.getFactAttributeAccess().getLeftParenthesisKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFactAttributeAccess().getMacroExpExpressionParserRuleCall_3_1_1_0());
						}
						lv_macroExp_5_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFactAttributeRule());
							}
							set(
								$current,
								"macroExp",
								lv_macroExp_5_0,
								"br.ufes.inf.pg.StoryGen.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getFactAttributeAccess().getRightParenthesisKeyword_3_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleQuantityAttribute
entryRuleQuantityAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuantityAttributeRule()); }
	iv_ruleQuantityAttribute=ruleQuantityAttribute
	{ $current=$iv_ruleQuantityAttribute.current; }
	EOF;

// Rule QuantityAttribute
ruleQuantityAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='quantity'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuantityAttributeAccess().getQuantityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getQuantityAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuantityAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getQuantityAttributeAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantityAttributeAccess().getInitValueIntegerTermParserRuleCall_3_0());
				}
				lv_initValue_3_0=ruleIntegerTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantityAttributeRule());
					}
					set(
						$current,
						"initValue",
						lv_initValue_3_0,
						"br.ufes.inf.pg.StoryGen.IntegerTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getQuantityAttributeAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuantityAttributeAccess().getSettingAttributeSettingParserRuleCall_4_1_0());
					}
					lv_setting_5_0=ruleAttributeSetting
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuantityAttributeRule());
						}
						set(
							$current,
							"setting",
							lv_setting_5_0,
							"br.ufes.inf.pg.StoryGen.AttributeSetting");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getQuantityAttributeAccess().getRightSquareBracketKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleAttributeSetting
entryRuleAttributeSetting returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeSettingRule()); }
	iv_ruleAttributeSetting=ruleAttributeSetting
	{ $current=$iv_ruleAttributeSetting.current; }
	EOF;

// Rule AttributeSetting
ruleAttributeSetting returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_positive_0_0='increments'
					{
						newLeafNode(lv_positive_0_0, grammarAccess.getAttributeSettingAccess().getPositiveIncrementsKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeSettingRule());
						}
						setWithLastConsumed($current, "positive", true, "increments");
					}
				)
			)
			    |
			(
				(
					lv_negative_1_0='decrements'
					{
						newLeafNode(lv_negative_1_0, grammarAccess.getAttributeSettingAccess().getNegativeDecrementsKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeSettingRule());
						}
						setWithLastConsumed($current, "negative", true, "decrements");
					}
				)
			)
		)
		otherlv_2='by'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeSettingAccess().getByKeyword_1());
		}
		(
			(
				lv_amount_3_0=RULE_INT
				{
					newLeafNode(lv_amount_3_0, grammarAccess.getAttributeSettingAccess().getAmountINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeSettingRule());
					}
					setWithLastConsumed(
						$current,
						"amount",
						lv_amount_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeSettingAccess().getFrequencyAttributeSettingFrequencyEnumRuleCall_3_0());
				}
				lv_frequency_4_0=ruleAttributeSettingFrequency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeSettingRule());
					}
					set(
						$current,
						"frequency",
						lv_frequency_4_0,
						"br.ufes.inf.pg.StoryGen.AttributeSettingFrequency");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEventAccess().getHappeningEventParserRuleCall_0());
		}
		this_HappeningEvent_0=ruleHappeningEvent
		{
			$current = $this_HappeningEvent_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getActionEventParserRuleCall_1());
		}
		this_ActionEvent_1=ruleActionEvent
		{
			$current = $this_ActionEvent_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleHappeningEvent
entryRuleHappeningEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHappeningEventRule()); }
	iv_ruleHappeningEvent=ruleHappeningEvent
	{ $current=$iv_ruleHappeningEvent.current; }
	EOF;

// Rule HappeningEvent
ruleHappeningEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_opening_0_0='opening'
					{
						newLeafNode(lv_opening_0_0, grammarAccess.getHappeningEventAccess().getOpeningOpeningKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHappeningEventRule());
						}
						setWithLastConsumed($current, "opening", true, "opening");
					}
				)
			)
			    |
			(
				(
					lv_ending_1_0='ending'
					{
						newLeafNode(lv_ending_1_0, grammarAccess.getHappeningEventAccess().getEndingEndingKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHappeningEventRule());
						}
						setWithLastConsumed($current, "ending", true, "ending");
					}
				)
			)
		)?
		otherlv_2='event'
		{
			newLeafNode(otherlv_2, grammarAccess.getHappeningEventAccess().getEventKeyword_1());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getHappeningEventAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHappeningEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getHappeningEventAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_5='priority:'
			{
				newLeafNode(otherlv_5, grammarAccess.getHappeningEventAccess().getPriorityKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHappeningEventAccess().getPriorityEventPriorityEnumRuleCall_4_1_0());
					}
					lv_priority_6_0=ruleEventPriority
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHappeningEventRule());
						}
						set(
							$current,
							"priority",
							lv_priority_6_0,
							"br.ufes.inf.pg.StoryGen.EventPriority");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='description:'
		{
			newLeafNode(otherlv_7, grammarAccess.getHappeningEventAccess().getDescriptionKeyword_5());
		}
		(
			(
				lv_description_8_0=RULE_STRING
				{
					newLeafNode(lv_description_8_0, grammarAccess.getHappeningEventAccess().getDescriptionSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHappeningEventRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_9='short-description:'
			{
				newLeafNode(otherlv_9, grammarAccess.getHappeningEventAccess().getShortDescriptionKeyword_7_0());
			}
			(
				(
					lv_shortDescription_10_0=RULE_STRING
					{
						newLeafNode(lv_shortDescription_10_0, grammarAccess.getHappeningEventAccess().getShortDescriptionSTRINGTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHappeningEventRule());
						}
						setWithLastConsumed(
							$current,
							"shortDescription",
							lv_shortDescription_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_11='triggers:'
			{
				newLeafNode(otherlv_11, grammarAccess.getHappeningEventAccess().getTriggersKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHappeningEventRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getHappeningEventAccess().getTriggerEventCrossReference_8_1_0());
					}
				)
			)
		)?
		(
			otherlv_13='may-trigger:'
			{
				newLeafNode(otherlv_13, grammarAccess.getHappeningEventAccess().getMayTriggerKeyword_9_0());
			}
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHappeningEventRule());
							}
						}
						otherlv_14=RULE_ID
						{
							newLeafNode(otherlv_14, grammarAccess.getHappeningEventAccess().getMayTriggersEventCrossReference_9_1_0_0());
						}
					)
				)
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getHappeningEventAccess().getCommaKeyword_9_1_1());
				}
			)*
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHappeningEventRule());
						}
					}
					otherlv_16=RULE_ID
					{
						newLeafNode(otherlv_16, grammarAccess.getHappeningEventAccess().getMayTriggersEventCrossReference_9_2_0());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getHappeningEventAccess().getConditionsConditionParserRuleCall_10_0());
				}
				lv_conditions_17_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHappeningEventRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_17_0,
						"br.ufes.inf.pg.StoryGen.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getHappeningEventAccess().getChangesChangeParserRuleCall_11_0());
				}
				lv_changes_18_0=ruleChange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHappeningEventRule());
					}
					add(
						$current,
						"changes",
						lv_changes_18_0,
						"br.ufes.inf.pg.StoryGen.Change");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getHappeningEventAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleActionEvent
entryRuleActionEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionEventRule()); }
	iv_ruleActionEvent=ruleActionEvent
	{ $current=$iv_ruleActionEvent.current; }
	EOF;

// Rule ActionEvent
ruleActionEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='action'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionEventAccess().getActionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActionEventAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionEventAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='priority:'
			{
				newLeafNode(otherlv_3, grammarAccess.getActionEventAccess().getPriorityKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionEventAccess().getPriorityEventPriorityEnumRuleCall_3_1_0());
					}
					lv_priority_4_0=ruleEventPriority
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionEventRule());
						}
						set(
							$current,
							"priority",
							lv_priority_4_0,
							"br.ufes.inf.pg.StoryGen.EventPriority");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='type:'
		{
			newLeafNode(otherlv_5, grammarAccess.getActionEventAccess().getTypeKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionEventAccess().getTypeActionTypeEnumRuleCall_5_0());
				}
				lv_type_6_0=ruleActionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionEventRule());
					}
					set(
						$current,
						"type",
						lv_type_6_0,
						"br.ufes.inf.pg.StoryGen.ActionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='description:'
		{
			newLeafNode(otherlv_7, grammarAccess.getActionEventAccess().getDescriptionKeyword_6());
		}
		(
			(
				lv_description_8_0=RULE_STRING
				{
					newLeafNode(lv_description_8_0, grammarAccess.getActionEventAccess().getDescriptionSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionEventRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_9='short-description:'
			{
				newLeafNode(otherlv_9, grammarAccess.getActionEventAccess().getShortDescriptionKeyword_8_0());
			}
			(
				(
					lv_shortDescription_10_0=RULE_STRING
					{
						newLeafNode(lv_shortDescription_10_0, grammarAccess.getActionEventAccess().getShortDescriptionSTRINGTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionEventRule());
						}
						setWithLastConsumed(
							$current,
							"shortDescription",
							lv_shortDescription_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_11='actor:'
		{
			newLeafNode(otherlv_11, grammarAccess.getActionEventAccess().getActorKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionEventRule());
					}
				}
				otherlv_12=RULE_ID
				{
					newLeafNode(otherlv_12, grammarAccess.getActionEventAccess().getActorActorCrossReference_10_0());
				}
			)
		)
		(
			otherlv_13='triggers:'
			{
				newLeafNode(otherlv_13, grammarAccess.getActionEventAccess().getTriggersKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionEventRule());
						}
					}
					otherlv_14=RULE_ID
					{
						newLeafNode(otherlv_14, grammarAccess.getActionEventAccess().getTriggerEventCrossReference_11_1_0());
					}
				)
			)
		)?
		(
			otherlv_15='may-trigger:'
			{
				newLeafNode(otherlv_15, grammarAccess.getActionEventAccess().getMayTriggerKeyword_12_0());
			}
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionEventRule());
							}
						}
						otherlv_16=RULE_ID
						{
							newLeafNode(otherlv_16, grammarAccess.getActionEventAccess().getMayTriggersEventCrossReference_12_1_0_0());
						}
					)
				)
				otherlv_17=','
				{
					newLeafNode(otherlv_17, grammarAccess.getActionEventAccess().getCommaKeyword_12_1_1());
				}
			)*
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionEventRule());
						}
					}
					otherlv_18=RULE_ID
					{
						newLeafNode(otherlv_18, grammarAccess.getActionEventAccess().getMayTriggersEventCrossReference_12_2_0());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActionEventAccess().getConditionsConditionParserRuleCall_13_0());
				}
				lv_conditions_19_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionEventRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_19_0,
						"br.ufes.inf.pg.StoryGen.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActionEventAccess().getChangesChangeParserRuleCall_14_0());
				}
				lv_changes_20_0=ruleChange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionEventRule());
					}
					add(
						$current,
						"changes",
						lv_changes_20_0,
						"br.ufes.inf.pg.StoryGen.Change");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getActionEventAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionAccess().getExpressionConditionParserRuleCall_0());
		}
		this_ExpressionCondition_0=ruleExpressionCondition
		{
			$current = $this_ExpressionCondition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getOrderConditionParserRuleCall_1());
		}
		this_OrderCondition_1=ruleOrderCondition
		{
			$current = $this_OrderCondition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getTriggerConditionParserRuleCall_2());
		}
		this_TriggerCondition_2=ruleTriggerCondition
		{
			$current = $this_TriggerCondition_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressionCondition
entryRuleExpressionCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionConditionRule()); }
	iv_ruleExpressionCondition=ruleExpressionCondition
	{ $current=$iv_ruleExpressionCondition.current; }
	EOF;

// Rule ExpressionCondition
ruleExpressionCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='require:'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpressionConditionAccess().getRequireKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionConditionAccess().getExpExpressionParserRuleCall_1_0());
				}
				lv_exp_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionConditionRule());
					}
					set(
						$current,
						"exp",
						lv_exp_1_0,
						"br.ufes.inf.pg.StoryGen.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOrderCondition
entryRuleOrderCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderConditionRule()); }
	iv_ruleOrderCondition=ruleOrderCondition
	{ $current=$iv_ruleOrderCondition.current; }
	EOF;

// Rule OrderCondition
ruleOrderCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='require:'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrderConditionAccess().getRequireKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderConditionAccess().getOrderOrderEnumRuleCall_1_0());
				}
				lv_order_1_0=ruleOrder
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderConditionRule());
					}
					set(
						$current,
						"order",
						lv_order_1_0,
						"br.ufes.inf.pg.StoryGen.Order");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOrderConditionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getOrderConditionAccess().getEventEventCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleTriggerCondition
entryRuleTriggerCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerConditionRule()); }
	iv_ruleTriggerCondition=ruleTriggerCondition
	{ $current=$iv_ruleTriggerCondition.current; }
	EOF;

// Rule TriggerCondition
ruleTriggerCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='require:'
		{
			newLeafNode(otherlv_0, grammarAccess.getTriggerConditionAccess().getRequireKeyword_0());
		}
		(
			(
				lv_trigger_1_0='be-triggered'
				{
					newLeafNode(lv_trigger_1_0, grammarAccess.getTriggerConditionAccess().getTriggerBeTriggeredKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTriggerConditionRule());
					}
					setWithLastConsumed($current, "trigger", true, "be-triggered");
				}
			)
		)
	)
;

// Entry rule entryRuleChange
entryRuleChange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeRule()); }
	iv_ruleChange=ruleChange
	{ $current=$iv_ruleChange.current; }
	EOF;

// Rule Change
ruleChange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getChangeAccess().getExistentChangeParserRuleCall_0());
		}
		this_ExistentChange_0=ruleExistentChange
		{
			$current = $this_ExistentChange_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getChangeAccess().getStoryDataChangeParserRuleCall_1());
		}
		this_StoryDataChange_1=ruleStoryDataChange
		{
			$current = $this_StoryDataChange_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExistentChange
entryRuleExistentChange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistentChangeRule()); }
	iv_ruleExistentChange=ruleExistentChange
	{ $current=$iv_ruleExistentChange.current; }
	EOF;

// Rule ExistentChange
ruleExistentChange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='change:'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistentChangeAccess().getChangeKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistentChangeRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getExistentChangeAccess().getExistentExistentCrossReference_1_0());
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getExistentChangeAccess().getFullStopKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistentChangeRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getExistentChangeAccess().getAttributeAttributeCrossReference_3_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExistentChangeAccess().getOpAttributionOperatorEnumRuleCall_4_0());
				}
				lv_op_4_0=ruleAttributionOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistentChangeRule());
					}
					set(
						$current,
						"op",
						lv_op_4_0,
						"br.ufes.inf.pg.StoryGen.AttributionOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExistentChangeAccess().getTermIntegerTermParserRuleCall_5_0_0());
					}
					lv_term_5_1=ruleIntegerTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistentChangeRule());
						}
						set(
							$current,
							"term",
							lv_term_5_1,
							"br.ufes.inf.pg.StoryGen.IntegerTerm");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getExistentChangeAccess().getTermBooleanTermParserRuleCall_5_0_1());
					}
					lv_term_5_2=ruleBooleanTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistentChangeRule());
						}
						set(
							$current,
							"term",
							lv_term_5_2,
							"br.ufes.inf.pg.StoryGen.BooleanTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleStoryDataChange
entryRuleStoryDataChange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoryDataChangeRule()); }
	iv_ruleStoryDataChange=ruleStoryDataChange
	{ $current=$iv_ruleStoryDataChange.current; }
	EOF;

// Rule StoryDataChange
ruleStoryDataChange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='change:'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoryDataChangeAccess().getChangeKeyword_0());
		}
		otherlv_1='Story'
		{
			newLeafNode(otherlv_1, grammarAccess.getStoryDataChangeAccess().getStoryKeyword_1());
		}
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getStoryDataChangeAccess().getFullStopKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoryDataChangeRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getStoryDataChangeAccess().getAttributeAttributeCrossReference_3_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStoryDataChangeAccess().getOpAttributionOperatorEnumRuleCall_4_0());
				}
				lv_op_4_0=ruleAttributionOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoryDataChangeRule());
					}
					set(
						$current,
						"op",
						lv_op_4_0,
						"br.ufes.inf.pg.StoryGen.AttributionOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStoryDataChangeAccess().getTermIntegerTermParserRuleCall_5_0_0());
					}
					lv_term_5_1=ruleIntegerTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStoryDataChangeRule());
						}
						set(
							$current,
							"term",
							lv_term_5_1,
							"br.ufes.inf.pg.StoryGen.IntegerTerm");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getStoryDataChangeAccess().getTermBooleanTermParserRuleCall_5_0_1());
					}
					lv_term_5_2=ruleBooleanTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStoryDataChangeRule());
						}
						set(
							$current,
							"term",
							lv_term_5_2,
							"br.ufes.inf.pg.StoryGen.BooleanTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getBinaryExpressionParserRuleCall());
	}
	this_BinaryExpression_0=ruleBinaryExpression
	{
		$current = $this_BinaryExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryExpressionRule()); }
	iv_ruleBinaryExpression=ruleBinaryExpression
	{ $current=$iv_ruleBinaryExpression.current; }
	EOF;

// Rule BinaryExpression
ruleBinaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBinaryExpressionAccess().getUnitExpressionParserRuleCall_0());
		}
		this_UnitExpression_0=ruleUnitExpression
		{
			$current = $this_UnitExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getBinaryExpressionAccess().getOrExpressionOperandsAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='or'
				{
					newLeafNode(otherlv_2, grammarAccess.getBinaryExpressionAccess().getOrKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_0_2_0());
						}
						lv_operands_3_0=ruleUnitExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							add(
								$current,
								"operands",
								lv_operands_3_0,
								"br.ufes.inf.pg.StoryGen.UnitExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='or'
					{
						newLeafNode(otherlv_4, grammarAccess.getBinaryExpressionAccess().getOrKeyword_1_0_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_0_3_1_0());
							}
							lv_operands_5_0=ruleUnitExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
								}
								add(
									$current,
									"operands",
									lv_operands_5_0,
									"br.ufes.inf.pg.StoryGen.UnitExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getBinaryExpressionAccess().getAndExpressionOperandsAction_1_1_0(),
							$current);
					}
				)
				otherlv_7='and'
				{
					newLeafNode(otherlv_7, grammarAccess.getBinaryExpressionAccess().getAndKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_1_2_0());
						}
						lv_operands_8_0=ruleUnitExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							add(
								$current,
								"operands",
								lv_operands_8_0,
								"br.ufes.inf.pg.StoryGen.UnitExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9='and'
					{
						newLeafNode(otherlv_9, grammarAccess.getBinaryExpressionAccess().getAndKeyword_1_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_1_3_1_0());
							}
							lv_operands_10_0=ruleUnitExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
								}
								add(
									$current,
									"operands",
									lv_operands_10_0,
									"br.ufes.inf.pg.StoryGen.UnitExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getBinaryExpressionAccess().getComparisonExpressionLeftAction_1_2_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOperatorComparisonOperatorEnumRuleCall_1_2_1_0());
						}
						lv_operator_12_0=ruleComparisonOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_12_0,
								"br.ufes.inf.pg.StoryGen.ComparisonOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBinaryExpressionAccess().getRightUnitExpressionParserRuleCall_1_2_2_0());
						}
						lv_right_13_0=ruleUnitExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_13_0,
								"br.ufes.inf.pg.StoryGen.UnitExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleUnitExpression
entryRuleUnitExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitExpressionRule()); }
	iv_ruleUnitExpression=ruleUnitExpression
	{ $current=$iv_ruleUnitExpression.current; }
	EOF;

// Rule UnitExpression
ruleUnitExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitExpressionAccess().getNegationExpressionParserRuleCall_0());
		}
		this_NegationExpression_0=ruleNegationExpression
		{
			$current = $this_NegationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnitaryExpressionParserRuleCall_1());
		}
		this_UnitaryExpression_1=ruleUnitaryExpression
		{
			$current = $this_UnitaryExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNegationExpression
entryRuleNegationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegationExpressionRule()); }
	iv_ruleNegationExpression=ruleNegationExpression
	{ $current=$iv_ruleNegationExpression.current; }
	EOF;

// Rule NegationExpression
ruleNegationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNegationExpressionAccess().getNegationExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='not'
		{
			newLeafNode(otherlv_1, grammarAccess.getNegationExpressionAccess().getNotKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNegationExpressionAccess().getOperandUnitExpressionParserRuleCall_2_0());
				}
				lv_operand_2_0=ruleUnitExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNegationExpressionRule());
					}
					set(
						$current,
						"operand",
						lv_operand_2_0,
						"br.ufes.inf.pg.StoryGen.UnitExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnitaryExpression
entryRuleUnitaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitaryExpressionRule()); }
	iv_ruleUnitaryExpression=ruleUnitaryExpression
	{ $current=$iv_ruleUnitaryExpression.current; }
	EOF;

// Rule UnitaryExpression
ruleUnitaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getUnitaryExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getUnitaryExpressionAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getUnitaryExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getUnitaryExpressionAccess().getTermParserRuleCall_1());
		}
		this_Term_3=ruleTerm
		{
			$current = $this_Term_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getExistentAttributeTermParserRuleCall_0());
		}
		this_ExistentAttributeTerm_0=ruleExistentAttributeTerm
		{
			$current = $this_ExistentAttributeTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getStoryAttributeTermParserRuleCall_1());
		}
		this_StoryAttributeTerm_1=ruleStoryAttributeTerm
		{
			$current = $this_StoryAttributeTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getIntegerTermParserRuleCall_2());
		}
		this_IntegerTerm_2=ruleIntegerTerm
		{
			$current = $this_IntegerTerm_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getBooleanTermParserRuleCall_3());
		}
		this_BooleanTerm_3=ruleBooleanTerm
		{
			$current = $this_BooleanTerm_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExistentAttributeTerm
entryRuleExistentAttributeTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistentAttributeTermRule()); }
	iv_ruleExistentAttributeTerm=ruleExistentAttributeTerm
	{ $current=$iv_ruleExistentAttributeTerm.current; }
	EOF;

// Rule ExistentAttributeTerm
ruleExistentAttributeTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistentAttributeTermRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getExistentAttributeTermAccess().getExistentExistentCrossReference_0_0());
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getExistentAttributeTermAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistentAttributeTermRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getExistentAttributeTermAccess().getAttributeAttributeCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleStoryAttributeTerm
entryRuleStoryAttributeTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoryAttributeTermRule()); }
	iv_ruleStoryAttributeTerm=ruleStoryAttributeTerm
	{ $current=$iv_ruleStoryAttributeTerm.current; }
	EOF;

// Rule StoryAttributeTerm
ruleStoryAttributeTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Story'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoryAttributeTermAccess().getStoryKeyword_0());
		}
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getStoryAttributeTermAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoryAttributeTermRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getStoryAttributeTermAccess().getAttributeAttributeCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerTermRule()); }
	iv_ruleIntegerTerm=ruleIntegerTerm
	{ $current=$iv_ruleIntegerTerm.current; }
	EOF;

// Rule IntegerTerm
ruleIntegerTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntegerTermAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntegerTermRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleBooleanTerm
entryRuleBooleanTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTermRule()); }
	iv_ruleBooleanTerm=ruleBooleanTerm
	{ $current=$iv_ruleBooleanTerm.current; }
	EOF;

// Rule BooleanTerm
ruleBooleanTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='true'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getBooleanTermAccess().getValueTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanTermRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='false'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getBooleanTermAccess().getValueFalseKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanTermRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
			)
		)
	)
;

// Rule ActionType
ruleActionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='visual'
			{
				$current = grammarAccess.getActionTypeAccess().getVISUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getActionTypeAccess().getVISUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='interaction'
			{
				$current = grammarAccess.getActionTypeAccess().getINTERACTIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getActionTypeAccess().getINTERACTIONEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='movement'
			{
				$current = grammarAccess.getActionTypeAccess().getMOVEMENTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getActionTypeAccess().getMOVEMENTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='communication'
			{
				$current = grammarAccess.getActionTypeAccess().getCOMMUNICATIONEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getActionTypeAccess().getCOMMUNICATIONEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='combat'
			{
				$current = grammarAccess.getActionTypeAccess().getCOMBATEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getActionTypeAccess().getCOMBATEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='idle'
			{
				$current = grammarAccess.getActionTypeAccess().getIDLEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getActionTypeAccess().getIDLEEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule ComparisonOperator
ruleComparisonOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getComparisonOperatorAccess().getLTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComparisonOperatorAccess().getLTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<='
			{
				$current = grammarAccess.getComparisonOperatorAccess().getLEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComparisonOperatorAccess().getLEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='=='
			{
				$current = grammarAccess.getComparisonOperatorAccess().getEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComparisonOperatorAccess().getEQEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='!='
			{
				$current = grammarAccess.getComparisonOperatorAccess().getNEQEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getComparisonOperatorAccess().getNEQEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>='
			{
				$current = grammarAccess.getComparisonOperatorAccess().getGEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getComparisonOperatorAccess().getGEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='>'
			{
				$current = grammarAccess.getComparisonOperatorAccess().getGTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getComparisonOperatorAccess().getGTEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule AttributionOperator
ruleAttributionOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getAttributionOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAttributionOperatorAccess().getASSIGNEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='+='
			{
				$current = grammarAccess.getAttributionOperatorAccess().getINCREMENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAttributionOperatorAccess().getINCREMENTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='-='
			{
				$current = grammarAccess.getAttributionOperatorAccess().getDECREMENTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAttributionOperatorAccess().getDECREMENTEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Order
ruleOrder returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='after'
			{
				$current = grammarAccess.getOrderAccess().getAFTEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOrderAccess().getAFTEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='before'
			{
				$current = grammarAccess.getOrderAccess().getBEFOREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOrderAccess().getBEFOREEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AttributeSettingFrequency
ruleAttributeSettingFrequency returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='every event'
			{
				$current = grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_EVENTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_EVENTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='every happening'
			{
				$current = grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_HAPPENINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_HAPPENINGEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='every action'
			{
				$current = grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_ACTIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_ACTIONEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='every player action'
			{
				$current = grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_PLAYER_ACTIONEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_PLAYER_ACTIONEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule EventPriority
ruleEventPriority returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='normal'
			{
				$current = grammarAccess.getEventPriorityAccess().getNORMALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEventPriorityAccess().getNORMALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='high'
			{
				$current = grammarAccess.getEventPriorityAccess().getHIGHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEventPriorityAccess().getHIGHEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='veryHigh'
			{
				$current = grammarAccess.getEventPriorityAccess().getVERY_HIGHEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEventPriorityAccess().getVERY_HIGHEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
