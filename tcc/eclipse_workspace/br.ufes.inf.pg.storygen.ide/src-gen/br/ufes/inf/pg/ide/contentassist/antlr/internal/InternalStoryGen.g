/*
 * generated by Xtext 2.17.0
 */
grammar InternalStoryGen;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package br.ufes.inf.pg.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.ufes.inf.pg.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import br.ufes.inf.pg.services.StoryGenGrammarAccess;

}
@parser::members {
	private StoryGenGrammarAccess grammarAccess;

	public void setGrammarAccess(StoryGenGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleStory
entryRuleStory
:
{ before(grammarAccess.getStoryRule()); }
	 ruleStory
{ after(grammarAccess.getStoryRule()); } 
	 EOF 
;

// Rule Story
ruleStory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoryAccess().getGroup()); }
		(rule__Story__Group__0)
		{ after(grammarAccess.getStoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStoryData
entryRuleStoryData
:
{ before(grammarAccess.getStoryDataRule()); }
	 ruleStoryData
{ after(grammarAccess.getStoryDataRule()); } 
	 EOF 
;

// Rule StoryData
ruleStoryData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoryDataAccess().getGroup()); }
		(rule__StoryData__Group__0)
		{ after(grammarAccess.getStoryDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpace
entryRuleSpace
:
{ before(grammarAccess.getSpaceRule()); }
	 ruleSpace
{ after(grammarAccess.getSpaceRule()); } 
	 EOF 
;

// Rule Space
ruleSpace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpaceAccess().getGroup()); }
		(rule__Space__Group__0)
		{ after(grammarAccess.getSpaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlot
entryRulePlot
:
{ before(grammarAccess.getPlotRule()); }
	 rulePlot
{ after(grammarAccess.getPlotRule()); } 
	 EOF 
;

// Rule Plot
rulePlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlotAccess().getGroup()); }
		(rule__Plot__Group__0)
		{ after(grammarAccess.getPlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistent
entryRuleExistent
:
{ before(grammarAccess.getExistentRule()); }
	 ruleExistent
{ after(grammarAccess.getExistentRule()); } 
	 EOF 
;

// Rule Existent
ruleExistent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistentAccess().getAlternatives()); }
		(rule__Existent__Alternatives)
		{ after(grammarAccess.getExistentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActor
entryRuleActor
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorAccess().getGroup()); }
		(rule__Actor__Group__0)
		{ after(grammarAccess.getActorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObject
entryRuleObject
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectAccess().getGroup()); }
		(rule__Object__Group__0)
		{ after(grammarAccess.getObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getAlternatives()); }
		(rule__Attribute__Alternatives)
		{ after(grammarAccess.getAttributeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactAttribute
entryRuleFactAttribute
:
{ before(grammarAccess.getFactAttributeRule()); }
	 ruleFactAttribute
{ after(grammarAccess.getFactAttributeRule()); } 
	 EOF 
;

// Rule FactAttribute
ruleFactAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactAttributeAccess().getGroup()); }
		(rule__FactAttribute__Group__0)
		{ after(grammarAccess.getFactAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuantityAttribute
entryRuleQuantityAttribute
:
{ before(grammarAccess.getQuantityAttributeRule()); }
	 ruleQuantityAttribute
{ after(grammarAccess.getQuantityAttributeRule()); } 
	 EOF 
;

// Rule QuantityAttribute
ruleQuantityAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuantityAttributeAccess().getGroup()); }
		(rule__QuantityAttribute__Group__0)
		{ after(grammarAccess.getQuantityAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeSetting
entryRuleAttributeSetting
:
{ before(grammarAccess.getAttributeSettingRule()); }
	 ruleAttributeSetting
{ after(grammarAccess.getAttributeSettingRule()); } 
	 EOF 
;

// Rule AttributeSetting
ruleAttributeSetting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeSettingAccess().getGroup()); }
		(rule__AttributeSetting__Group__0)
		{ after(grammarAccess.getAttributeSettingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getAlternatives()); }
		(rule__Event__Alternatives)
		{ after(grammarAccess.getEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHappeningEvent
entryRuleHappeningEvent
:
{ before(grammarAccess.getHappeningEventRule()); }
	 ruleHappeningEvent
{ after(grammarAccess.getHappeningEventRule()); } 
	 EOF 
;

// Rule HappeningEvent
ruleHappeningEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHappeningEventAccess().getGroup()); }
		(rule__HappeningEvent__Group__0)
		{ after(grammarAccess.getHappeningEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionEvent
entryRuleActionEvent
:
{ before(grammarAccess.getActionEventRule()); }
	 ruleActionEvent
{ after(grammarAccess.getActionEventRule()); } 
	 EOF 
;

// Rule ActionEvent
ruleActionEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionEventAccess().getGroup()); }
		(rule__ActionEvent__Group__0)
		{ after(grammarAccess.getActionEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionCondition
entryRuleExpressionCondition
:
{ before(grammarAccess.getExpressionConditionRule()); }
	 ruleExpressionCondition
{ after(grammarAccess.getExpressionConditionRule()); } 
	 EOF 
;

// Rule ExpressionCondition
ruleExpressionCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionConditionAccess().getGroup()); }
		(rule__ExpressionCondition__Group__0)
		{ after(grammarAccess.getExpressionConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderCondition
entryRuleOrderCondition
:
{ before(grammarAccess.getOrderConditionRule()); }
	 ruleOrderCondition
{ after(grammarAccess.getOrderConditionRule()); } 
	 EOF 
;

// Rule OrderCondition
ruleOrderCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderConditionAccess().getGroup()); }
		(rule__OrderCondition__Group__0)
		{ after(grammarAccess.getOrderConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTriggerCondition
entryRuleTriggerCondition
:
{ before(grammarAccess.getTriggerConditionRule()); }
	 ruleTriggerCondition
{ after(grammarAccess.getTriggerConditionRule()); } 
	 EOF 
;

// Rule TriggerCondition
ruleTriggerCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerConditionAccess().getGroup()); }
		(rule__TriggerCondition__Group__0)
		{ after(grammarAccess.getTriggerConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChange
entryRuleChange
:
{ before(grammarAccess.getChangeRule()); }
	 ruleChange
{ after(grammarAccess.getChangeRule()); } 
	 EOF 
;

// Rule Change
ruleChange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeAccess().getAlternatives()); }
		(rule__Change__Alternatives)
		{ after(grammarAccess.getChangeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistentChange
entryRuleExistentChange
:
{ before(grammarAccess.getExistentChangeRule()); }
	 ruleExistentChange
{ after(grammarAccess.getExistentChangeRule()); } 
	 EOF 
;

// Rule ExistentChange
ruleExistentChange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistentChangeAccess().getGroup()); }
		(rule__ExistentChange__Group__0)
		{ after(grammarAccess.getExistentChangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStoryDataChange
entryRuleStoryDataChange
:
{ before(grammarAccess.getStoryDataChangeRule()); }
	 ruleStoryDataChange
{ after(grammarAccess.getStoryDataChangeRule()); } 
	 EOF 
;

// Rule StoryDataChange
ruleStoryDataChange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoryDataChangeAccess().getGroup()); }
		(rule__StoryDataChange__Group__0)
		{ after(grammarAccess.getStoryDataChangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getBinaryExpressionParserRuleCall()); }
		ruleBinaryExpression
		{ after(grammarAccess.getExpressionAccess().getBinaryExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression
:
{ before(grammarAccess.getBinaryExpressionRule()); }
	 ruleBinaryExpression
{ after(grammarAccess.getBinaryExpressionRule()); } 
	 EOF 
;

// Rule BinaryExpression
ruleBinaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getGroup()); }
		(rule__BinaryExpression__Group__0)
		{ after(grammarAccess.getBinaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitExpression
entryRuleUnitExpression
:
{ before(grammarAccess.getUnitExpressionRule()); }
	 ruleUnitExpression
{ after(grammarAccess.getUnitExpressionRule()); } 
	 EOF 
;

// Rule UnitExpression
ruleUnitExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitExpressionAccess().getAlternatives()); }
		(rule__UnitExpression__Alternatives)
		{ after(grammarAccess.getUnitExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegationExpression
entryRuleNegationExpression
:
{ before(grammarAccess.getNegationExpressionRule()); }
	 ruleNegationExpression
{ after(grammarAccess.getNegationExpressionRule()); } 
	 EOF 
;

// Rule NegationExpression
ruleNegationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegationExpressionAccess().getGroup()); }
		(rule__NegationExpression__Group__0)
		{ after(grammarAccess.getNegationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitaryExpression
entryRuleUnitaryExpression
:
{ before(grammarAccess.getUnitaryExpressionRule()); }
	 ruleUnitaryExpression
{ after(grammarAccess.getUnitaryExpressionRule()); } 
	 EOF 
;

// Rule UnitaryExpression
ruleUnitaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitaryExpressionAccess().getAlternatives()); }
		(rule__UnitaryExpression__Alternatives)
		{ after(grammarAccess.getUnitaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getAlternatives()); }
		(rule__Term__Alternatives)
		{ after(grammarAccess.getTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistentAttributeTerm
entryRuleExistentAttributeTerm
:
{ before(grammarAccess.getExistentAttributeTermRule()); }
	 ruleExistentAttributeTerm
{ after(grammarAccess.getExistentAttributeTermRule()); } 
	 EOF 
;

// Rule ExistentAttributeTerm
ruleExistentAttributeTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistentAttributeTermAccess().getGroup()); }
		(rule__ExistentAttributeTerm__Group__0)
		{ after(grammarAccess.getExistentAttributeTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStoryAttributeTerm
entryRuleStoryAttributeTerm
:
{ before(grammarAccess.getStoryAttributeTermRule()); }
	 ruleStoryAttributeTerm
{ after(grammarAccess.getStoryAttributeTermRule()); } 
	 EOF 
;

// Rule StoryAttributeTerm
ruleStoryAttributeTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoryAttributeTermAccess().getGroup()); }
		(rule__StoryAttributeTerm__Group__0)
		{ after(grammarAccess.getStoryAttributeTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm
:
{ before(grammarAccess.getIntegerTermRule()); }
	 ruleIntegerTerm
{ after(grammarAccess.getIntegerTermRule()); } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerTermAccess().getValueAssignment()); }
		(rule__IntegerTerm__ValueAssignment)
		{ after(grammarAccess.getIntegerTermAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanTerm
entryRuleBooleanTerm
:
{ before(grammarAccess.getBooleanTermRule()); }
	 ruleBooleanTerm
{ after(grammarAccess.getBooleanTermRule()); } 
	 EOF 
;

// Rule BooleanTerm
ruleBooleanTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanTermAccess().getValueAssignment()); }
		(rule__BooleanTerm__ValueAssignment)
		{ after(grammarAccess.getBooleanTermAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ActionType
ruleActionType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionTypeAccess().getAlternatives()); }
		(rule__ActionType__Alternatives)
		{ after(grammarAccess.getActionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComparisonOperator
ruleComparisonOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
		(rule__ComparisonOperator__Alternatives)
		{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AttributionOperator
ruleAttributionOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributionOperatorAccess().getAlternatives()); }
		(rule__AttributionOperator__Alternatives)
		{ after(grammarAccess.getAttributionOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Order
ruleOrder
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getAlternatives()); }
		(rule__Order__Alternatives)
		{ after(grammarAccess.getOrderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AttributeSettingFrequency
ruleAttributeSettingFrequency
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSettingFrequencyAccess().getAlternatives()); }
		(rule__AttributeSettingFrequency__Alternatives)
		{ after(grammarAccess.getAttributeSettingFrequencyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EventPriority
ruleEventPriority
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPriorityAccess().getAlternatives()); }
		(rule__EventPriority__Alternatives)
		{ after(grammarAccess.getEventPriorityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Existent__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentAccess().getActorParserRuleCall_0()); }
		ruleActor
		{ after(grammarAccess.getExistentAccess().getActorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistentAccess().getObjectParserRuleCall_1()); }
		ruleObject
		{ after(grammarAccess.getExistentAccess().getObjectParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getFactAttributeParserRuleCall_0()); }
		ruleFactAttribute
		{ after(grammarAccess.getAttributeAccess().getFactAttributeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeAccess().getQuantityAttributeParserRuleCall_1()); }
		ruleQuantityAttribute
		{ after(grammarAccess.getAttributeAccess().getQuantityAttributeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactAttributeAccess().getInitValueAssignment_3_0()); }
		(rule__FactAttribute__InitValueAssignment_3_0)
		{ after(grammarAccess.getFactAttributeAccess().getInitValueAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactAttributeAccess().getGroup_3_1()); }
		(rule__FactAttribute__Group_3_1__0)
		{ after(grammarAccess.getFactAttributeAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSettingAccess().getPositiveAssignment_0_0()); }
		(rule__AttributeSetting__PositiveAssignment_0_0)
		{ after(grammarAccess.getAttributeSettingAccess().getPositiveAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSettingAccess().getNegativeAssignment_0_1()); }
		(rule__AttributeSetting__NegativeAssignment_0_1)
		{ after(grammarAccess.getAttributeSettingAccess().getNegativeAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getHappeningEventParserRuleCall_0()); }
		ruleHappeningEvent
		{ after(grammarAccess.getEventAccess().getHappeningEventParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getActionEventParserRuleCall_1()); }
		ruleActionEvent
		{ after(grammarAccess.getEventAccess().getActionEventParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getOpeningAssignment_0_0()); }
		(rule__HappeningEvent__OpeningAssignment_0_0)
		{ after(grammarAccess.getHappeningEventAccess().getOpeningAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getHappeningEventAccess().getEndingAssignment_0_1()); }
		(rule__HappeningEvent__EndingAssignment_0_1)
		{ after(grammarAccess.getHappeningEventAccess().getEndingAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionConditionParserRuleCall_0()); }
		ruleExpressionCondition
		{ after(grammarAccess.getConditionAccess().getExpressionConditionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getOrderConditionParserRuleCall_1()); }
		ruleOrderCondition
		{ after(grammarAccess.getConditionAccess().getOrderConditionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getTriggerConditionParserRuleCall_2()); }
		ruleTriggerCondition
		{ after(grammarAccess.getConditionAccess().getTriggerConditionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Change__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeAccess().getExistentChangeParserRuleCall_0()); }
		ruleExistentChange
		{ after(grammarAccess.getChangeAccess().getExistentChangeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getChangeAccess().getStoryDataChangeParserRuleCall_1()); }
		ruleStoryDataChange
		{ after(grammarAccess.getChangeAccess().getStoryDataChangeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__TermAlternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentChangeAccess().getTermIntegerTermParserRuleCall_5_0_0()); }
		ruleIntegerTerm
		{ after(grammarAccess.getExistentChangeAccess().getTermIntegerTermParserRuleCall_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistentChangeAccess().getTermBooleanTermParserRuleCall_5_0_1()); }
		ruleBooleanTerm
		{ after(grammarAccess.getExistentChangeAccess().getTermBooleanTermParserRuleCall_5_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__TermAlternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryDataChangeAccess().getTermIntegerTermParserRuleCall_5_0_0()); }
		ruleIntegerTerm
		{ after(grammarAccess.getStoryDataChangeAccess().getTermIntegerTermParserRuleCall_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStoryDataChangeAccess().getTermBooleanTermParserRuleCall_5_0_1()); }
		ruleBooleanTerm
		{ after(grammarAccess.getStoryDataChangeAccess().getTermBooleanTermParserRuleCall_5_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getGroup_1_0()); }
		(rule__BinaryExpression__Group_1_0__0)
		{ after(grammarAccess.getBinaryExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getGroup_1_1()); }
		(rule__BinaryExpression__Group_1_1__0)
		{ after(grammarAccess.getBinaryExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getGroup_1_2()); }
		(rule__BinaryExpression__Group_1_2__0)
		{ after(grammarAccess.getBinaryExpressionAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitExpressionAccess().getNegationExpressionParserRuleCall_0()); }
		ruleNegationExpression
		{ after(grammarAccess.getUnitExpressionAccess().getNegationExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitExpressionAccess().getUnitaryExpressionParserRuleCall_1()); }
		ruleUnitaryExpression
		{ after(grammarAccess.getUnitExpressionAccess().getUnitaryExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitaryExpressionAccess().getGroup_0()); }
		(rule__UnitaryExpression__Group_0__0)
		{ after(grammarAccess.getUnitaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitaryExpressionAccess().getTermParserRuleCall_1()); }
		ruleTerm
		{ after(grammarAccess.getUnitaryExpressionAccess().getTermParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getExistentAttributeTermParserRuleCall_0()); }
		ruleExistentAttributeTerm
		{ after(grammarAccess.getTermAccess().getExistentAttributeTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getStoryAttributeTermParserRuleCall_1()); }
		ruleStoryAttributeTerm
		{ after(grammarAccess.getTermAccess().getStoryAttributeTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getIntegerTermParserRuleCall_2()); }
		ruleIntegerTerm
		{ after(grammarAccess.getTermAccess().getIntegerTermParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getBooleanTermParserRuleCall_3()); }
		ruleBooleanTerm
		{ after(grammarAccess.getTermAccess().getBooleanTermParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTermAccess().getValueTrueKeyword_0_0()); }
		'true'
		{ after(grammarAccess.getBooleanTermAccess().getValueTrueKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanTermAccess().getValueFalseKeyword_0_1()); }
		'false'
		{ after(grammarAccess.getBooleanTermAccess().getValueFalseKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionTypeAccess().getVISUALEnumLiteralDeclaration_0()); }
		('visual')
		{ after(grammarAccess.getActionTypeAccess().getVISUALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getINTERACTIONEnumLiteralDeclaration_1()); }
		('interaction')
		{ after(grammarAccess.getActionTypeAccess().getINTERACTIONEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getMOVEMENTEnumLiteralDeclaration_2()); }
		('movement')
		{ after(grammarAccess.getActionTypeAccess().getMOVEMENTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getCOMMUNICATIONEnumLiteralDeclaration_3()); }
		('communication')
		{ after(grammarAccess.getActionTypeAccess().getCOMMUNICATIONEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getCOMBATEnumLiteralDeclaration_4()); }
		('combat')
		{ after(grammarAccess.getActionTypeAccess().getCOMBATEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getActionTypeAccess().getIDLEEnumLiteralDeclaration_5()); }
		('idle')
		{ after(grammarAccess.getActionTypeAccess().getIDLEEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getLTEnumLiteralDeclaration_0()); }
		('<')
		{ after(grammarAccess.getComparisonOperatorAccess().getLTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getLEEnumLiteralDeclaration_1()); }
		('<=')
		{ after(grammarAccess.getComparisonOperatorAccess().getLEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getEQEnumLiteralDeclaration_2()); }
		('==')
		{ after(grammarAccess.getComparisonOperatorAccess().getEQEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getNEQEnumLiteralDeclaration_3()); }
		('!=')
		{ after(grammarAccess.getComparisonOperatorAccess().getNEQEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGEEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getComparisonOperatorAccess().getGEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGTEnumLiteralDeclaration_5()); }
		('>')
		{ after(grammarAccess.getComparisonOperatorAccess().getGTEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributionOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getAttributionOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributionOperatorAccess().getINCREMENTEnumLiteralDeclaration_1()); }
		('+=')
		{ after(grammarAccess.getAttributionOperatorAccess().getINCREMENTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributionOperatorAccess().getDECREMENTEnumLiteralDeclaration_2()); }
		('-=')
		{ after(grammarAccess.getAttributionOperatorAccess().getDECREMENTEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getAFTEREnumLiteralDeclaration_0()); }
		('after')
		{ after(grammarAccess.getOrderAccess().getAFTEREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderAccess().getBEFOREEnumLiteralDeclaration_1()); }
		('before')
		{ after(grammarAccess.getOrderAccess().getBEFOREEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSettingFrequency__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_EVENTEnumLiteralDeclaration_0()); }
		('every event')
		{ after(grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_EVENTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_HAPPENINGEnumLiteralDeclaration_1()); }
		('every happening')
		{ after(grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_HAPPENINGEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_ACTIONEnumLiteralDeclaration_2()); }
		('every action')
		{ after(grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_ACTIONEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_PLAYER_ACTIONEnumLiteralDeclaration_3()); }
		('every player action')
		{ after(grammarAccess.getAttributeSettingFrequencyAccess().getEVERY_PLAYER_ACTIONEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventPriority__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPriorityAccess().getNORMALEnumLiteralDeclaration_0()); }
		('normal')
		{ after(grammarAccess.getEventPriorityAccess().getNORMALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventPriorityAccess().getHIGHEnumLiteralDeclaration_1()); }
		('high')
		{ after(grammarAccess.getEventPriorityAccess().getHIGHEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEventPriorityAccess().getVERY_HIGHEnumLiteralDeclaration_2()); }
		('veryHigh')
		{ after(grammarAccess.getEventPriorityAccess().getVERY_HIGHEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Story__Group__0__Impl
	rule__Story__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAccess().getDataAssignment_0()); }
	(rule__Story__DataAssignment_0)
	{ after(grammarAccess.getStoryAccess().getDataAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Story__Group__1__Impl
	rule__Story__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAccess().getSpaceAssignment_1()); }
	(rule__Story__SpaceAssignment_1)
	{ after(grammarAccess.getStoryAccess().getSpaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Story__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAccess().getPlotAssignment_2()); }
	(rule__Story__PlotAssignment_2)
	{ after(grammarAccess.getStoryAccess().getPlotAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoryData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryData__Group__0__Impl
	rule__StoryData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataAccess().getStoryDataAction_0()); }
	()
	{ after(grammarAccess.getStoryDataAccess().getStoryDataAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryData__Group__1__Impl
	rule__StoryData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataAccess().getStoryKeyword_1()); }
	'Story'
	{ after(grammarAccess.getStoryDataAccess().getStoryKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryData__Group__2__Impl
	rule__StoryData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataAccess().getDataKeyword_2()); }
	'data'
	{ after(grammarAccess.getStoryDataAccess().getDataKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryData__Group__3__Impl
	rule__StoryData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getStoryDataAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryData__Group__4__Impl
	rule__StoryData__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataAccess().getAttributesAssignment_4()); }
	(rule__StoryData__AttributesAssignment_4)*
	{ after(grammarAccess.getStoryDataAccess().getAttributesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryData__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getStoryDataAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Space__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Space__Group__0__Impl
	rule__Space__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpaceAccess().getSpaceAction_0()); }
	()
	{ after(grammarAccess.getSpaceAccess().getSpaceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Space__Group__1__Impl
	rule__Space__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpaceAccess().getSpaceKeyword_1()); }
	'Space'
	{ after(grammarAccess.getSpaceAccess().getSpaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Space__Group__2__Impl
	rule__Space__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpaceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSpaceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Space__Group__3__Impl
	rule__Space__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpaceAccess().getExistentsAssignment_3()); }
	(rule__Space__ExistentsAssignment_3)*
	{ after(grammarAccess.getSpaceAccess().getExistentsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Space__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpaceAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSpaceAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Plot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plot__Group__0__Impl
	rule__Plot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlotAccess().getPlotAction_0()); }
	()
	{ after(grammarAccess.getPlotAccess().getPlotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plot__Group__1__Impl
	rule__Plot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlotAccess().getPlotKeyword_1()); }
	'Plot'
	{ after(grammarAccess.getPlotAccess().getPlotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plot__Group__2__Impl
	rule__Plot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPlotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plot__Group__3__Impl
	rule__Plot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlotAccess().getEventsAssignment_3()); }
	(rule__Plot__EventsAssignment_3)*
	{ after(grammarAccess.getPlotAccess().getEventsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlotAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPlotAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getPlayableAssignment_0()); }
	(rule__Actor__PlayableAssignment_0)?
	{ after(grammarAccess.getActorAccess().getPlayableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getActorKeyword_1()); }
	'actor'
	{ after(grammarAccess.getActorAccess().getActorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__2__Impl
	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameAssignment_2()); }
	(rule__Actor__NameAssignment_2)
	{ after(grammarAccess.getActorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__3__Impl
	rule__Actor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__4__Impl
	rule__Actor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameKeyword_4()); }
	'name:'
	{ after(grammarAccess.getActorAccess().getNameKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__5__Impl
	rule__Actor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getDisplayNameAssignment_5()); }
	(rule__Actor__DisplayNameAssignment_5)
	{ after(grammarAccess.getActorAccess().getDisplayNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__6__Impl
	rule__Actor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getAttributesAssignment_6()); }
	(rule__Actor__AttributesAssignment_6)*
	{ after(grammarAccess.getActorAccess().getAttributesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjectKeyword_0()); }
	'object'
	{ after(grammarAccess.getObjectAccess().getObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__1__Impl
	rule__Object__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getNameAssignment_1()); }
	(rule__Object__NameAssignment_1)
	{ after(grammarAccess.getObjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__2__Impl
	rule__Object__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__3__Impl
	rule__Object__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getAttributesAssignment_3()); }
	(rule__Object__AttributesAssignment_3)*
	{ after(grammarAccess.getObjectAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FactAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FactAttribute__Group__0__Impl
	rule__FactAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAttributeAccess().getFactKeyword_0()); }
	'fact'
	{ after(grammarAccess.getFactAttributeAccess().getFactKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FactAttribute__Group__1__Impl
	rule__FactAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAttributeAccess().getNameAssignment_1()); }
	(rule__FactAttribute__NameAssignment_1)
	{ after(grammarAccess.getFactAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FactAttribute__Group__2__Impl
	rule__FactAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAttributeAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getFactAttributeAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FactAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAttributeAccess().getAlternatives_3()); }
	(rule__FactAttribute__Alternatives_3)
	{ after(grammarAccess.getFactAttributeAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FactAttribute__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FactAttribute__Group_3_1__0__Impl
	rule__FactAttribute__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAttributeAccess().getLeftParenthesisKeyword_3_1_0()); }
	'('
	{ after(grammarAccess.getFactAttributeAccess().getLeftParenthesisKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FactAttribute__Group_3_1__1__Impl
	rule__FactAttribute__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAttributeAccess().getMacroExpAssignment_3_1_1()); }
	(rule__FactAttribute__MacroExpAssignment_3_1_1)
	{ after(grammarAccess.getFactAttributeAccess().getMacroExpAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FactAttribute__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactAttributeAccess().getRightParenthesisKeyword_3_1_2()); }
	')'
	{ after(grammarAccess.getFactAttributeAccess().getRightParenthesisKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuantityAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityAttribute__Group__0__Impl
	rule__QuantityAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAttributeAccess().getQuantityKeyword_0()); }
	'quantity'
	{ after(grammarAccess.getQuantityAttributeAccess().getQuantityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityAttribute__Group__1__Impl
	rule__QuantityAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAttributeAccess().getNameAssignment_1()); }
	(rule__QuantityAttribute__NameAssignment_1)
	{ after(grammarAccess.getQuantityAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityAttribute__Group__2__Impl
	rule__QuantityAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAttributeAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getQuantityAttributeAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityAttribute__Group__3__Impl
	rule__QuantityAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAttributeAccess().getInitValueAssignment_3()); }
	(rule__QuantityAttribute__InitValueAssignment_3)
	{ after(grammarAccess.getQuantityAttributeAccess().getInitValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityAttribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAttributeAccess().getGroup_4()); }
	(rule__QuantityAttribute__Group_4__0)?
	{ after(grammarAccess.getQuantityAttributeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuantityAttribute__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityAttribute__Group_4__0__Impl
	rule__QuantityAttribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAttributeAccess().getLeftSquareBracketKeyword_4_0()); }
	'['
	{ after(grammarAccess.getQuantityAttributeAccess().getLeftSquareBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityAttribute__Group_4__1__Impl
	rule__QuantityAttribute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAttributeAccess().getSettingAssignment_4_1()); }
	(rule__QuantityAttribute__SettingAssignment_4_1)
	{ after(grammarAccess.getQuantityAttributeAccess().getSettingAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityAttribute__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAttributeAccess().getRightSquareBracketKeyword_4_2()); }
	']'
	{ after(grammarAccess.getQuantityAttributeAccess().getRightSquareBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSetting__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSetting__Group__0__Impl
	rule__AttributeSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSettingAccess().getAlternatives_0()); }
	(rule__AttributeSetting__Alternatives_0)
	{ after(grammarAccess.getAttributeSettingAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSetting__Group__1__Impl
	rule__AttributeSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSettingAccess().getByKeyword_1()); }
	'by'
	{ after(grammarAccess.getAttributeSettingAccess().getByKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSetting__Group__2__Impl
	rule__AttributeSetting__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSettingAccess().getAmountAssignment_2()); }
	(rule__AttributeSetting__AmountAssignment_2)
	{ after(grammarAccess.getAttributeSettingAccess().getAmountAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeSetting__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeSettingAccess().getFrequencyAssignment_3()); }
	(rule__AttributeSetting__FrequencyAssignment_3)
	{ after(grammarAccess.getAttributeSettingAccess().getFrequencyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HappeningEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__0__Impl
	rule__HappeningEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getAlternatives_0()); }
	(rule__HappeningEvent__Alternatives_0)?
	{ after(grammarAccess.getHappeningEventAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__1__Impl
	rule__HappeningEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getEventKeyword_1()); }
	'event'
	{ after(grammarAccess.getHappeningEventAccess().getEventKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__2__Impl
	rule__HappeningEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getNameAssignment_2()); }
	(rule__HappeningEvent__NameAssignment_2)
	{ after(grammarAccess.getHappeningEventAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__3__Impl
	rule__HappeningEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getHappeningEventAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__4__Impl
	rule__HappeningEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getGroup_4()); }
	(rule__HappeningEvent__Group_4__0)?
	{ after(grammarAccess.getHappeningEventAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__5__Impl
	rule__HappeningEvent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getDescriptionKeyword_5()); }
	'description:'
	{ after(grammarAccess.getHappeningEventAccess().getDescriptionKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__6__Impl
	rule__HappeningEvent__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getDescriptionAssignment_6()); }
	(rule__HappeningEvent__DescriptionAssignment_6)
	{ after(grammarAccess.getHappeningEventAccess().getDescriptionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__7__Impl
	rule__HappeningEvent__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getGroup_7()); }
	(rule__HappeningEvent__Group_7__0)?
	{ after(grammarAccess.getHappeningEventAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__8__Impl
	rule__HappeningEvent__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getGroup_8()); }
	(rule__HappeningEvent__Group_8__0)?
	{ after(grammarAccess.getHappeningEventAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__9__Impl
	rule__HappeningEvent__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getGroup_9()); }
	(rule__HappeningEvent__Group_9__0)?
	{ after(grammarAccess.getHappeningEventAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__10__Impl
	rule__HappeningEvent__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getConditionsAssignment_10()); }
	(rule__HappeningEvent__ConditionsAssignment_10)*
	{ after(grammarAccess.getHappeningEventAccess().getConditionsAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__11__Impl
	rule__HappeningEvent__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getChangesAssignment_11()); }
	(rule__HappeningEvent__ChangesAssignment_11)*
	{ after(grammarAccess.getHappeningEventAccess().getChangesAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getHappeningEventAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HappeningEvent__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_4__0__Impl
	rule__HappeningEvent__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getPriorityKeyword_4_0()); }
	'priority:'
	{ after(grammarAccess.getHappeningEventAccess().getPriorityKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getPriorityAssignment_4_1()); }
	(rule__HappeningEvent__PriorityAssignment_4_1)
	{ after(grammarAccess.getHappeningEventAccess().getPriorityAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HappeningEvent__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_7__0__Impl
	rule__HappeningEvent__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getShortDescriptionKeyword_7_0()); }
	'short-description:'
	{ after(grammarAccess.getHappeningEventAccess().getShortDescriptionKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getShortDescriptionAssignment_7_1()); }
	(rule__HappeningEvent__ShortDescriptionAssignment_7_1)
	{ after(grammarAccess.getHappeningEventAccess().getShortDescriptionAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HappeningEvent__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_8__0__Impl
	rule__HappeningEvent__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getTriggersKeyword_8_0()); }
	'triggers:'
	{ after(grammarAccess.getHappeningEventAccess().getTriggersKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getTriggerAssignment_8_1()); }
	(rule__HappeningEvent__TriggerAssignment_8_1)
	{ after(grammarAccess.getHappeningEventAccess().getTriggerAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HappeningEvent__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_9__0__Impl
	rule__HappeningEvent__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getMayTriggerKeyword_9_0()); }
	'may-trigger:'
	{ after(grammarAccess.getHappeningEventAccess().getMayTriggerKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_9__1__Impl
	rule__HappeningEvent__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getGroup_9_1()); }
	(rule__HappeningEvent__Group_9_1__0)*
	{ after(grammarAccess.getHappeningEventAccess().getGroup_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getMayTriggersAssignment_9_2()); }
	(rule__HappeningEvent__MayTriggersAssignment_9_2)
	{ after(grammarAccess.getHappeningEventAccess().getMayTriggersAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HappeningEvent__Group_9_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_9_1__0__Impl
	rule__HappeningEvent__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_9_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getMayTriggersAssignment_9_1_0()); }
	(rule__HappeningEvent__MayTriggersAssignment_9_1_0)
	{ after(grammarAccess.getHappeningEventAccess().getMayTriggersAssignment_9_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_9_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HappeningEvent__Group_9_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__Group_9_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHappeningEventAccess().getCommaKeyword_9_1_1()); }
	','
	{ after(grammarAccess.getHappeningEventAccess().getCommaKeyword_9_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__0__Impl
	rule__ActionEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getActionKeyword_0()); }
	'action'
	{ after(grammarAccess.getActionEventAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__1__Impl
	rule__ActionEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getNameAssignment_1()); }
	(rule__ActionEvent__NameAssignment_1)
	{ after(grammarAccess.getActionEventAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__2__Impl
	rule__ActionEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getActionEventAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__3__Impl
	rule__ActionEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getGroup_3()); }
	(rule__ActionEvent__Group_3__0)?
	{ after(grammarAccess.getActionEventAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__4__Impl
	rule__ActionEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getTypeKeyword_4()); }
	'type:'
	{ after(grammarAccess.getActionEventAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__5__Impl
	rule__ActionEvent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getTypeAssignment_5()); }
	(rule__ActionEvent__TypeAssignment_5)
	{ after(grammarAccess.getActionEventAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__6__Impl
	rule__ActionEvent__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getDescriptionKeyword_6()); }
	'description:'
	{ after(grammarAccess.getActionEventAccess().getDescriptionKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__7__Impl
	rule__ActionEvent__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getDescriptionAssignment_7()); }
	(rule__ActionEvent__DescriptionAssignment_7)
	{ after(grammarAccess.getActionEventAccess().getDescriptionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__8__Impl
	rule__ActionEvent__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getGroup_8()); }
	(rule__ActionEvent__Group_8__0)?
	{ after(grammarAccess.getActionEventAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__9__Impl
	rule__ActionEvent__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getActorKeyword_9()); }
	'actor:'
	{ after(grammarAccess.getActionEventAccess().getActorKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__10__Impl
	rule__ActionEvent__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getActorAssignment_10()); }
	(rule__ActionEvent__ActorAssignment_10)
	{ after(grammarAccess.getActionEventAccess().getActorAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__11__Impl
	rule__ActionEvent__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getGroup_11()); }
	(rule__ActionEvent__Group_11__0)?
	{ after(grammarAccess.getActionEventAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__12__Impl
	rule__ActionEvent__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getGroup_12()); }
	(rule__ActionEvent__Group_12__0)?
	{ after(grammarAccess.getActionEventAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__13__Impl
	rule__ActionEvent__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getConditionsAssignment_13()); }
	(rule__ActionEvent__ConditionsAssignment_13)*
	{ after(grammarAccess.getActionEventAccess().getConditionsAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__14__Impl
	rule__ActionEvent__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getChangesAssignment_14()); }
	(rule__ActionEvent__ChangesAssignment_14)*
	{ after(grammarAccess.getActionEventAccess().getChangesAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getRightCurlyBracketKeyword_15()); }
	'}'
	{ after(grammarAccess.getActionEventAccess().getRightCurlyBracketKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionEvent__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_3__0__Impl
	rule__ActionEvent__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getPriorityKeyword_3_0()); }
	'priority:'
	{ after(grammarAccess.getActionEventAccess().getPriorityKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getPriorityAssignment_3_1()); }
	(rule__ActionEvent__PriorityAssignment_3_1)
	{ after(grammarAccess.getActionEventAccess().getPriorityAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionEvent__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_8__0__Impl
	rule__ActionEvent__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getShortDescriptionKeyword_8_0()); }
	'short-description:'
	{ after(grammarAccess.getActionEventAccess().getShortDescriptionKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getShortDescriptionAssignment_8_1()); }
	(rule__ActionEvent__ShortDescriptionAssignment_8_1)
	{ after(grammarAccess.getActionEventAccess().getShortDescriptionAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionEvent__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_11__0__Impl
	rule__ActionEvent__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getTriggersKeyword_11_0()); }
	'triggers:'
	{ after(grammarAccess.getActionEventAccess().getTriggersKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getTriggerAssignment_11_1()); }
	(rule__ActionEvent__TriggerAssignment_11_1)
	{ after(grammarAccess.getActionEventAccess().getTriggerAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionEvent__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_12__0__Impl
	rule__ActionEvent__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getMayTriggerKeyword_12_0()); }
	'may-trigger:'
	{ after(grammarAccess.getActionEventAccess().getMayTriggerKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_12__1__Impl
	rule__ActionEvent__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getGroup_12_1()); }
	(rule__ActionEvent__Group_12_1__0)*
	{ after(grammarAccess.getActionEventAccess().getGroup_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_12__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_12__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getMayTriggersAssignment_12_2()); }
	(rule__ActionEvent__MayTriggersAssignment_12_2)
	{ after(grammarAccess.getActionEventAccess().getMayTriggersAssignment_12_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionEvent__Group_12_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_12_1__0__Impl
	rule__ActionEvent__Group_12_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_12_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getMayTriggersAssignment_12_1_0()); }
	(rule__ActionEvent__MayTriggersAssignment_12_1_0)
	{ after(grammarAccess.getActionEventAccess().getMayTriggersAssignment_12_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_12_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionEvent__Group_12_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__Group_12_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionEventAccess().getCommaKeyword_12_1_1()); }
	','
	{ after(grammarAccess.getActionEventAccess().getCommaKeyword_12_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionCondition__Group__0__Impl
	rule__ExpressionCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionConditionAccess().getRequireKeyword_0()); }
	'require:'
	{ after(grammarAccess.getExpressionConditionAccess().getRequireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionConditionAccess().getExpAssignment_1()); }
	(rule__ExpressionCondition__ExpAssignment_1)
	{ after(grammarAccess.getExpressionConditionAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderCondition__Group__0__Impl
	rule__OrderCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderConditionAccess().getRequireKeyword_0()); }
	'require:'
	{ after(grammarAccess.getOrderConditionAccess().getRequireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderCondition__Group__1__Impl
	rule__OrderCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderConditionAccess().getOrderAssignment_1()); }
	(rule__OrderCondition__OrderAssignment_1)
	{ after(grammarAccess.getOrderConditionAccess().getOrderAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderCondition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderConditionAccess().getEventAssignment_2()); }
	(rule__OrderCondition__EventAssignment_2)
	{ after(grammarAccess.getOrderConditionAccess().getEventAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TriggerCondition__Group__0__Impl
	rule__TriggerCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerConditionAccess().getRequireKeyword_0()); }
	'require:'
	{ after(grammarAccess.getTriggerConditionAccess().getRequireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TriggerCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerConditionAccess().getTriggerAssignment_1()); }
	(rule__TriggerCondition__TriggerAssignment_1)
	{ after(grammarAccess.getTriggerConditionAccess().getTriggerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentChange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentChange__Group__0__Impl
	rule__ExistentChange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentChangeAccess().getChangeKeyword_0()); }
	'change:'
	{ after(grammarAccess.getExistentChangeAccess().getChangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentChange__Group__1__Impl
	rule__ExistentChange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentChangeAccess().getExistentAssignment_1()); }
	(rule__ExistentChange__ExistentAssignment_1)
	{ after(grammarAccess.getExistentChangeAccess().getExistentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentChange__Group__2__Impl
	rule__ExistentChange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentChangeAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getExistentChangeAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentChange__Group__3__Impl
	rule__ExistentChange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentChangeAccess().getAttributeAssignment_3()); }
	(rule__ExistentChange__AttributeAssignment_3)
	{ after(grammarAccess.getExistentChangeAccess().getAttributeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentChange__Group__4__Impl
	rule__ExistentChange__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentChangeAccess().getOpAssignment_4()); }
	(rule__ExistentChange__OpAssignment_4)
	{ after(grammarAccess.getExistentChangeAccess().getOpAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentChange__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentChangeAccess().getTermAssignment_5()); }
	(rule__ExistentChange__TermAssignment_5)
	{ after(grammarAccess.getExistentChangeAccess().getTermAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoryDataChange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryDataChange__Group__0__Impl
	rule__StoryDataChange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataChangeAccess().getChangeKeyword_0()); }
	'change:'
	{ after(grammarAccess.getStoryDataChangeAccess().getChangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryDataChange__Group__1__Impl
	rule__StoryDataChange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataChangeAccess().getStoryKeyword_1()); }
	'Story'
	{ after(grammarAccess.getStoryDataChangeAccess().getStoryKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryDataChange__Group__2__Impl
	rule__StoryDataChange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataChangeAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getStoryDataChangeAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryDataChange__Group__3__Impl
	rule__StoryDataChange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataChangeAccess().getAttributeAssignment_3()); }
	(rule__StoryDataChange__AttributeAssignment_3)
	{ after(grammarAccess.getStoryDataChangeAccess().getAttributeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryDataChange__Group__4__Impl
	rule__StoryDataChange__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataChangeAccess().getOpAssignment_4()); }
	(rule__StoryDataChange__OpAssignment_4)
	{ after(grammarAccess.getStoryDataChangeAccess().getOpAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryDataChange__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryDataChangeAccess().getTermAssignment_5()); }
	(rule__StoryDataChange__TermAssignment_5)
	{ after(grammarAccess.getStoryDataChangeAccess().getTermAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group__0__Impl
	rule__BinaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getUnitExpressionParserRuleCall_0()); }
	ruleUnitExpression
	{ after(grammarAccess.getBinaryExpressionAccess().getUnitExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getAlternatives_1()); }
	(rule__BinaryExpression__Alternatives_1)?
	{ after(grammarAccess.getBinaryExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_0__0__Impl
	rule__BinaryExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getOrExpressionOperandsAction_1_0_0()); }
	()
	{ after(grammarAccess.getBinaryExpressionAccess().getOrExpressionOperandsAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_0__1__Impl
	rule__BinaryExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getOrKeyword_1_0_1()); }
	'or'
	{ after(grammarAccess.getBinaryExpressionAccess().getOrKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_0__2__Impl
	rule__BinaryExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getOperandsAssignment_1_0_2()); }
	(rule__BinaryExpression__OperandsAssignment_1_0_2)
	{ after(grammarAccess.getBinaryExpressionAccess().getOperandsAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getGroup_1_0_3()); }
	(rule__BinaryExpression__Group_1_0_3__0)*
	{ after(grammarAccess.getBinaryExpressionAccess().getGroup_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_1_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_0_3__0__Impl
	rule__BinaryExpression__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getOrKeyword_1_0_3_0()); }
	'or'
	{ after(grammarAccess.getBinaryExpressionAccess().getOrKeyword_1_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getOperandsAssignment_1_0_3_1()); }
	(rule__BinaryExpression__OperandsAssignment_1_0_3_1)
	{ after(grammarAccess.getBinaryExpressionAccess().getOperandsAssignment_1_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_1__0__Impl
	rule__BinaryExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getAndExpressionOperandsAction_1_1_0()); }
	()
	{ after(grammarAccess.getBinaryExpressionAccess().getAndExpressionOperandsAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_1__1__Impl
	rule__BinaryExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getAndKeyword_1_1_1()); }
	'and'
	{ after(grammarAccess.getBinaryExpressionAccess().getAndKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_1__2__Impl
	rule__BinaryExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getOperandsAssignment_1_1_2()); }
	(rule__BinaryExpression__OperandsAssignment_1_1_2)
	{ after(grammarAccess.getBinaryExpressionAccess().getOperandsAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getGroup_1_1_3()); }
	(rule__BinaryExpression__Group_1_1_3__0)*
	{ after(grammarAccess.getBinaryExpressionAccess().getGroup_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_1_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_1_3__0__Impl
	rule__BinaryExpression__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getAndKeyword_1_1_3_0()); }
	'and'
	{ after(grammarAccess.getBinaryExpressionAccess().getAndKeyword_1_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getOperandsAssignment_1_1_3_1()); }
	(rule__BinaryExpression__OperandsAssignment_1_1_3_1)
	{ after(grammarAccess.getBinaryExpressionAccess().getOperandsAssignment_1_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_2__0__Impl
	rule__BinaryExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getComparisonExpressionLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getBinaryExpressionAccess().getComparisonExpressionLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_2__1__Impl
	rule__BinaryExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getOperatorAssignment_1_2_1()); }
	(rule__BinaryExpression__OperatorAssignment_1_2_1)
	{ after(grammarAccess.getBinaryExpressionAccess().getOperatorAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getRightAssignment_1_2_2()); }
	(rule__BinaryExpression__RightAssignment_1_2_2)
	{ after(grammarAccess.getBinaryExpressionAccess().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NegationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegationExpression__Group__0__Impl
	rule__NegationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationExpressionAccess().getNegationExpressionAction_0()); }
	()
	{ after(grammarAccess.getNegationExpressionAccess().getNegationExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegationExpression__Group__1__Impl
	rule__NegationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationExpressionAccess().getNotKeyword_1()); }
	'not'
	{ after(grammarAccess.getNegationExpressionAccess().getNotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegationExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationExpressionAccess().getOperandAssignment_2()); }
	(rule__NegationExpression__OperandAssignment_2)
	{ after(grammarAccess.getNegationExpressionAccess().getOperandAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitaryExpression__Group_0__0__Impl
	rule__UnitaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getUnitaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitaryExpression__Group_0__1__Impl
	rule__UnitaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getUnitaryExpressionAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitaryExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getUnitaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentAttributeTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentAttributeTerm__Group__0__Impl
	rule__ExistentAttributeTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentAttributeTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentAttributeTermAccess().getExistentAssignment_0()); }
	(rule__ExistentAttributeTerm__ExistentAssignment_0)
	{ after(grammarAccess.getExistentAttributeTermAccess().getExistentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentAttributeTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentAttributeTerm__Group__1__Impl
	rule__ExistentAttributeTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentAttributeTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentAttributeTermAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getExistentAttributeTermAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentAttributeTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentAttributeTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentAttributeTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentAttributeTermAccess().getAttributeAssignment_2()); }
	(rule__ExistentAttributeTerm__AttributeAssignment_2)
	{ after(grammarAccess.getExistentAttributeTermAccess().getAttributeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoryAttributeTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryAttributeTerm__Group__0__Impl
	rule__StoryAttributeTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryAttributeTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAttributeTermAccess().getStoryKeyword_0()); }
	'Story'
	{ after(grammarAccess.getStoryAttributeTermAccess().getStoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryAttributeTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryAttributeTerm__Group__1__Impl
	rule__StoryAttributeTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryAttributeTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAttributeTermAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getStoryAttributeTermAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryAttributeTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoryAttributeTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryAttributeTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAttributeTermAccess().getAttributeAssignment_2()); }
	(rule__StoryAttributeTerm__AttributeAssignment_2)
	{ after(grammarAccess.getStoryAttributeTermAccess().getAttributeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Story__DataAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryAccess().getDataStoryDataParserRuleCall_0_0()); }
		ruleStoryData
		{ after(grammarAccess.getStoryAccess().getDataStoryDataParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__SpaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryAccess().getSpaceSpaceParserRuleCall_1_0()); }
		ruleSpace
		{ after(grammarAccess.getStoryAccess().getSpaceSpaceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__PlotAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryAccess().getPlotPlotParserRuleCall_2_0()); }
		rulePlot
		{ after(grammarAccess.getStoryAccess().getPlotPlotParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryData__AttributesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryDataAccess().getAttributesAttributeParserRuleCall_4_0()); }
		ruleAttribute
		{ after(grammarAccess.getStoryDataAccess().getAttributesAttributeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__ExistentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpaceAccess().getExistentsExistentParserRuleCall_3_0()); }
		ruleExistent
		{ after(grammarAccess.getSpaceAccess().getExistentsExistentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plot__EventsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlotAccess().getEventsEventParserRuleCall_3_0()); }
		ruleEvent
		{ after(grammarAccess.getPlotAccess().getEventsEventParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__PlayableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getPlayablePlayerKeyword_0_0()); }
		(
			{ before(grammarAccess.getActorAccess().getPlayablePlayerKeyword_0_0()); }
			'player'
			{ after(grammarAccess.getActorAccess().getPlayablePlayerKeyword_0_0()); }
		)
		{ after(grammarAccess.getActorAccess().getPlayablePlayerKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__DisplayNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getDisplayNameSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getActorAccess().getDisplayNameSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__AttributesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getAttributesAttributeParserRuleCall_6_0()); }
		ruleAttribute
		{ after(grammarAccess.getActorAccess().getAttributesAttributeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getObjectAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFactAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__InitValueAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactAttributeAccess().getInitValueBooleanTermParserRuleCall_3_0_0()); }
		ruleBooleanTerm
		{ after(grammarAccess.getFactAttributeAccess().getInitValueBooleanTermParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactAttribute__MacroExpAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactAttributeAccess().getMacroExpExpressionParserRuleCall_3_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFactAttributeAccess().getMacroExpExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getQuantityAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__InitValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAttributeAccess().getInitValueIntegerTermParserRuleCall_3_0()); }
		ruleIntegerTerm
		{ after(grammarAccess.getQuantityAttributeAccess().getInitValueIntegerTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityAttribute__SettingAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAttributeAccess().getSettingAttributeSettingParserRuleCall_4_1_0()); }
		ruleAttributeSetting
		{ after(grammarAccess.getQuantityAttributeAccess().getSettingAttributeSettingParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__PositiveAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSettingAccess().getPositiveIncrementsKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getAttributeSettingAccess().getPositiveIncrementsKeyword_0_0_0()); }
			'increments'
			{ after(grammarAccess.getAttributeSettingAccess().getPositiveIncrementsKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getAttributeSettingAccess().getPositiveIncrementsKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__NegativeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSettingAccess().getNegativeDecrementsKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getAttributeSettingAccess().getNegativeDecrementsKeyword_0_1_0()); }
			'decrements'
			{ after(grammarAccess.getAttributeSettingAccess().getNegativeDecrementsKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getAttributeSettingAccess().getNegativeDecrementsKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__AmountAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSettingAccess().getAmountINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAttributeSettingAccess().getAmountINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSetting__FrequencyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeSettingAccess().getFrequencyAttributeSettingFrequencyEnumRuleCall_3_0()); }
		ruleAttributeSettingFrequency
		{ after(grammarAccess.getAttributeSettingAccess().getFrequencyAttributeSettingFrequencyEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__OpeningAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getOpeningOpeningKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getHappeningEventAccess().getOpeningOpeningKeyword_0_0_0()); }
			'opening'
			{ after(grammarAccess.getHappeningEventAccess().getOpeningOpeningKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getHappeningEventAccess().getOpeningOpeningKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__EndingAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getEndingEndingKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getHappeningEventAccess().getEndingEndingKeyword_0_1_0()); }
			'ending'
			{ after(grammarAccess.getHappeningEventAccess().getEndingEndingKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getHappeningEventAccess().getEndingEndingKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getHappeningEventAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__PriorityAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getPriorityEventPriorityEnumRuleCall_4_1_0()); }
		ruleEventPriority
		{ after(grammarAccess.getHappeningEventAccess().getPriorityEventPriorityEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__DescriptionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getDescriptionSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getHappeningEventAccess().getDescriptionSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__ShortDescriptionAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getShortDescriptionSTRINGTerminalRuleCall_7_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getHappeningEventAccess().getShortDescriptionSTRINGTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__TriggerAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getTriggerEventCrossReference_8_1_0()); }
		(
			{ before(grammarAccess.getHappeningEventAccess().getTriggerEventIDTerminalRuleCall_8_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getHappeningEventAccess().getTriggerEventIDTerminalRuleCall_8_1_0_1()); }
		)
		{ after(grammarAccess.getHappeningEventAccess().getTriggerEventCrossReference_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__MayTriggersAssignment_9_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getMayTriggersEventCrossReference_9_1_0_0()); }
		(
			{ before(grammarAccess.getHappeningEventAccess().getMayTriggersEventIDTerminalRuleCall_9_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getHappeningEventAccess().getMayTriggersEventIDTerminalRuleCall_9_1_0_0_1()); }
		)
		{ after(grammarAccess.getHappeningEventAccess().getMayTriggersEventCrossReference_9_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__MayTriggersAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getMayTriggersEventCrossReference_9_2_0()); }
		(
			{ before(grammarAccess.getHappeningEventAccess().getMayTriggersEventIDTerminalRuleCall_9_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getHappeningEventAccess().getMayTriggersEventIDTerminalRuleCall_9_2_0_1()); }
		)
		{ after(grammarAccess.getHappeningEventAccess().getMayTriggersEventCrossReference_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__ConditionsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getConditionsConditionParserRuleCall_10_0()); }
		ruleCondition
		{ after(grammarAccess.getHappeningEventAccess().getConditionsConditionParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HappeningEvent__ChangesAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHappeningEventAccess().getChangesChangeParserRuleCall_11_0()); }
		ruleChange
		{ after(grammarAccess.getHappeningEventAccess().getChangesChangeParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionEventAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__PriorityAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getPriorityEventPriorityEnumRuleCall_3_1_0()); }
		ruleEventPriority
		{ after(grammarAccess.getActionEventAccess().getPriorityEventPriorityEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getTypeActionTypeEnumRuleCall_5_0()); }
		ruleActionType
		{ after(grammarAccess.getActionEventAccess().getTypeActionTypeEnumRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__DescriptionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getDescriptionSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getActionEventAccess().getDescriptionSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__ShortDescriptionAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getShortDescriptionSTRINGTerminalRuleCall_8_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getActionEventAccess().getShortDescriptionSTRINGTerminalRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__ActorAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getActorActorCrossReference_10_0()); }
		(
			{ before(grammarAccess.getActionEventAccess().getActorActorIDTerminalRuleCall_10_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionEventAccess().getActorActorIDTerminalRuleCall_10_0_1()); }
		)
		{ after(grammarAccess.getActionEventAccess().getActorActorCrossReference_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__TriggerAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getTriggerEventCrossReference_11_1_0()); }
		(
			{ before(grammarAccess.getActionEventAccess().getTriggerEventIDTerminalRuleCall_11_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionEventAccess().getTriggerEventIDTerminalRuleCall_11_1_0_1()); }
		)
		{ after(grammarAccess.getActionEventAccess().getTriggerEventCrossReference_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__MayTriggersAssignment_12_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getMayTriggersEventCrossReference_12_1_0_0()); }
		(
			{ before(grammarAccess.getActionEventAccess().getMayTriggersEventIDTerminalRuleCall_12_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionEventAccess().getMayTriggersEventIDTerminalRuleCall_12_1_0_0_1()); }
		)
		{ after(grammarAccess.getActionEventAccess().getMayTriggersEventCrossReference_12_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__MayTriggersAssignment_12_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getMayTriggersEventCrossReference_12_2_0()); }
		(
			{ before(grammarAccess.getActionEventAccess().getMayTriggersEventIDTerminalRuleCall_12_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionEventAccess().getMayTriggersEventIDTerminalRuleCall_12_2_0_1()); }
		)
		{ after(grammarAccess.getActionEventAccess().getMayTriggersEventCrossReference_12_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__ConditionsAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getConditionsConditionParserRuleCall_13_0()); }
		ruleCondition
		{ after(grammarAccess.getActionEventAccess().getConditionsConditionParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionEvent__ChangesAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionEventAccess().getChangesChangeParserRuleCall_14_0()); }
		ruleChange
		{ after(grammarAccess.getActionEventAccess().getChangesChangeParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCondition__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionConditionAccess().getExpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionConditionAccess().getExpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderCondition__OrderAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderConditionAccess().getOrderOrderEnumRuleCall_1_0()); }
		ruleOrder
		{ after(grammarAccess.getOrderConditionAccess().getOrderOrderEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderCondition__EventAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderConditionAccess().getEventEventCrossReference_2_0()); }
		(
			{ before(grammarAccess.getOrderConditionAccess().getEventEventIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOrderConditionAccess().getEventEventIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getOrderConditionAccess().getEventEventCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerCondition__TriggerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerConditionAccess().getTriggerBeTriggeredKeyword_1_0()); }
		(
			{ before(grammarAccess.getTriggerConditionAccess().getTriggerBeTriggeredKeyword_1_0()); }
			'be-triggered'
			{ after(grammarAccess.getTriggerConditionAccess().getTriggerBeTriggeredKeyword_1_0()); }
		)
		{ after(grammarAccess.getTriggerConditionAccess().getTriggerBeTriggeredKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__ExistentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentChangeAccess().getExistentExistentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExistentChangeAccess().getExistentExistentIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExistentChangeAccess().getExistentExistentIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExistentChangeAccess().getExistentExistentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__AttributeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentChangeAccess().getAttributeAttributeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getExistentChangeAccess().getAttributeAttributeIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExistentChangeAccess().getAttributeAttributeIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getExistentChangeAccess().getAttributeAttributeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__OpAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentChangeAccess().getOpAttributionOperatorEnumRuleCall_4_0()); }
		ruleAttributionOperator
		{ after(grammarAccess.getExistentChangeAccess().getOpAttributionOperatorEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentChange__TermAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentChangeAccess().getTermAlternatives_5_0()); }
		(rule__ExistentChange__TermAlternatives_5_0)
		{ after(grammarAccess.getExistentChangeAccess().getTermAlternatives_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__AttributeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryDataChangeAccess().getAttributeAttributeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getStoryDataChangeAccess().getAttributeAttributeIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStoryDataChangeAccess().getAttributeAttributeIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getStoryDataChangeAccess().getAttributeAttributeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__OpAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryDataChangeAccess().getOpAttributionOperatorEnumRuleCall_4_0()); }
		ruleAttributionOperator
		{ after(grammarAccess.getStoryDataChangeAccess().getOpAttributionOperatorEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryDataChange__TermAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryDataChangeAccess().getTermAlternatives_5_0()); }
		(rule__StoryDataChange__TermAlternatives_5_0)
		{ after(grammarAccess.getStoryDataChangeAccess().getTermAlternatives_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__OperandsAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_0_2_0()); }
		ruleUnitExpression
		{ after(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__OperandsAssignment_1_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_0_3_1_0()); }
		ruleUnitExpression
		{ after(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__OperandsAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_1_2_0()); }
		ruleUnitExpression
		{ after(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__OperandsAssignment_1_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_1_3_1_0()); }
		ruleUnitExpression
		{ after(grammarAccess.getBinaryExpressionAccess().getOperandsUnitExpressionParserRuleCall_1_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__OperatorAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getOperatorComparisonOperatorEnumRuleCall_1_2_1_0()); }
		ruleComparisonOperator
		{ after(grammarAccess.getBinaryExpressionAccess().getOperatorComparisonOperatorEnumRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getRightUnitExpressionParserRuleCall_1_2_2_0()); }
		ruleUnitExpression
		{ after(grammarAccess.getBinaryExpressionAccess().getRightUnitExpressionParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationExpression__OperandAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationExpressionAccess().getOperandUnitExpressionParserRuleCall_2_0()); }
		ruleUnitExpression
		{ after(grammarAccess.getNegationExpressionAccess().getOperandUnitExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentAttributeTerm__ExistentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentAttributeTermAccess().getExistentExistentCrossReference_0_0()); }
		(
			{ before(grammarAccess.getExistentAttributeTermAccess().getExistentExistentIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExistentAttributeTermAccess().getExistentExistentIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getExistentAttributeTermAccess().getExistentExistentCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentAttributeTerm__AttributeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentAttributeTermAccess().getAttributeAttributeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getExistentAttributeTermAccess().getAttributeAttributeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExistentAttributeTermAccess().getAttributeAttributeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getExistentAttributeTermAccess().getAttributeAttributeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoryAttributeTerm__AttributeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryAttributeTermAccess().getAttributeAttributeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getStoryAttributeTermAccess().getAttributeAttributeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStoryAttributeTermAccess().getAttributeAttributeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getStoryAttributeTermAccess().getAttributeAttributeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerTermAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerTermAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTermAccess().getValueAlternatives_0()); }
		(rule__BooleanTerm__ValueAlternatives_0)
		{ after(grammarAccess.getBooleanTermAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
