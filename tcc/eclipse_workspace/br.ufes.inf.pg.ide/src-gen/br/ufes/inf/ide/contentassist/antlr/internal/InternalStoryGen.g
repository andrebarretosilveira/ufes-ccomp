/*
 * generated by Xtext 2.17.0
 */
grammar InternalStoryGen;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package br.ufes.inf.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.ufes.inf.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import br.ufes.inf.services.StoryGenGrammarAccess;

}
@parser::members {
	private StoryGenGrammarAccess grammarAccess;

	public void setGrammarAccess(StoryGenGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleStory
entryRuleStory
:
{ before(grammarAccess.getStoryRule()); }
	 ruleStory
{ after(grammarAccess.getStoryRule()); } 
	 EOF 
;

// Rule Story
ruleStory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoryAccess().getGroup()); }
		(rule__Story__Group__0)
		{ after(grammarAccess.getStoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorld
entryRuleWorld
:
{ before(grammarAccess.getWorldRule()); }
	 ruleWorld
{ after(grammarAccess.getWorldRule()); } 
	 EOF 
;

// Rule World
ruleWorld 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorldAccess().getGroup()); }
		(rule__World__Group__0)
		{ after(grammarAccess.getWorldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getGroup()); }
		(rule__Event__Group__0)
		{ after(grammarAccess.getEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolExp
entryRuleBoolExp
:
{ before(grammarAccess.getBoolExpRule()); }
	 ruleBoolExp
{ after(grammarAccess.getBoolExpRule()); } 
	 EOF 
;

// Rule BoolExp
ruleBoolExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolExpAccess().getAlternatives()); }
		(rule__BoolExp__Alternatives)
		{ after(grammarAccess.getBoolExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryBoolExp
entryRuleBinaryBoolExp
:
{ before(grammarAccess.getBinaryBoolExpRule()); }
	 ruleBinaryBoolExp
{ after(grammarAccess.getBinaryBoolExpRule()); } 
	 EOF 
;

// Rule BinaryBoolExp
ruleBinaryBoolExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryBoolExpAccess().getGroup()); }
		(rule__BinaryBoolExp__Group__0)
		{ after(grammarAccess.getBinaryBoolExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryQntyExp
entryRuleBinaryQntyExp
:
{ before(grammarAccess.getBinaryQntyExpRule()); }
	 ruleBinaryQntyExp
{ after(grammarAccess.getBinaryQntyExpRule()); } 
	 EOF 
;

// Rule BinaryQntyExp
ruleBinaryQntyExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryQntyExpAccess().getGroup()); }
		(rule__BinaryQntyExp__Group__0)
		{ after(grammarAccess.getBinaryQntyExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryBoolExp
entryRuleUnaryBoolExp
:
{ before(grammarAccess.getUnaryBoolExpRule()); }
	 ruleUnaryBoolExp
{ after(grammarAccess.getUnaryBoolExpRule()); } 
	 EOF 
;

// Rule UnaryBoolExp
ruleUnaryBoolExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryBoolExpAccess().getAlternatives()); }
		(rule__UnaryBoolExp__Alternatives)
		{ after(grammarAccess.getUnaryBoolExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegateBoolExp
entryRuleNegateBoolExp
:
{ before(grammarAccess.getNegateBoolExpRule()); }
	 ruleNegateBoolExp
{ after(grammarAccess.getNegateBoolExpRule()); } 
	 EOF 
;

// Rule NegateBoolExp
ruleNegateBoolExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegateBoolExpAccess().getGroup()); }
		(rule__NegateBoolExp__Group__0)
		{ after(grammarAccess.getNegateBoolExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryQuantityExp
entryRuleUnaryQuantityExp
:
{ before(grammarAccess.getUnaryQuantityExpRule()); }
	 ruleUnaryQuantityExp
{ after(grammarAccess.getUnaryQuantityExpRule()); } 
	 EOF 
;

// Rule UnaryQuantityExp
ruleUnaryQuantityExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryQuantityExpAccess().getAlternatives()); }
		(rule__UnaryQuantityExp__Alternatives)
		{ after(grammarAccess.getUnaryQuantityExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AttrType
ruleAttrType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrTypeAccess().getAlternatives()); }
		(rule__AttrType__Alternatives)
		{ after(grammarAccess.getAttrTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BooleanValue
ruleBooleanValue
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getAlternatives()); }
		(rule__BooleanValue__Alternatives)
		{ after(grammarAccess.getBooleanValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NumOp
ruleNumOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumOpAccess().getAlternatives()); }
		(rule__NumOp__Alternatives)
		{ after(grammarAccess.getNumOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BoolOp
ruleBoolOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOpAccess().getAlternatives()); }
		(rule__BoolOp__Alternatives)
		{ after(grammarAccess.getBoolOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpAccess().getGroup_0()); }
		(rule__BoolExp__Group_0__0)
		{ after(grammarAccess.getBoolExpAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolExpAccess().getBinaryBoolAssignment_1()); }
		(rule__BoolExp__BinaryBoolAssignment_1)
		{ after(grammarAccess.getBoolExpAccess().getBinaryBoolAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBoolExpAccess().getBinaryQntyAssignment_2()); }
		(rule__BoolExp__BinaryQntyAssignment_2)
		{ after(grammarAccess.getBoolExpAccess().getBinaryQntyAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getBoolExpAccess().getNegateBoolExpAssignment_3()); }
		(rule__BoolExp__NegateBoolExpAssignment_3)
		{ after(grammarAccess.getBoolExpAccess().getNegateBoolExpAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getBoolExpAccess().getUnaryBoolAssignment_4()); }
		(rule__BoolExp__UnaryBoolAssignment_4)
		{ after(grammarAccess.getBoolExpAccess().getUnaryBoolAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryBoolExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryBoolExpAccess().getIdAssignment_0()); }
		(rule__UnaryBoolExp__IdAssignment_0)
		{ after(grammarAccess.getUnaryBoolExpAccess().getIdAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryBoolExpAccess().getValueAssignment_1()); }
		(rule__UnaryBoolExp__ValueAssignment_1)
		{ after(grammarAccess.getUnaryBoolExpAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryQuantityExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryQuantityExpAccess().getIdAssignment_0()); }
		(rule__UnaryQuantityExp__IdAssignment_0)
		{ after(grammarAccess.getUnaryQuantityExpAccess().getIdAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryQuantityExpAccess().getValueAssignment_1()); }
		(rule__UnaryQuantityExp__ValueAssignment_1)
		{ after(grammarAccess.getUnaryQuantityExpAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrTypeAccess().getFACTEnumLiteralDeclaration_0()); }
		('fact')
		{ after(grammarAccess.getAttrTypeAccess().getFACTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttrTypeAccess().getQUANTITYEnumLiteralDeclaration_1()); }
		('quantity')
		{ after(grammarAccess.getAttrTypeAccess().getQUANTITYEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getTRUEEnumLiteralDeclaration_0()); }
		('true')
		{ after(grammarAccess.getBooleanValueAccess().getTRUEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanValueAccess().getFALSEEnumLiteralDeclaration_1()); }
		('false')
		{ after(grammarAccess.getBooleanValueAccess().getFALSEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumOpAccess().getEQEnumLiteralDeclaration_0()); }
		('==')
		{ after(grammarAccess.getNumOpAccess().getEQEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumOpAccess().getNEQEnumLiteralDeclaration_1()); }
		('!=')
		{ after(grammarAccess.getNumOpAccess().getNEQEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumOpAccess().getGTEnumLiteralDeclaration_2()); }
		('>')
		{ after(grammarAccess.getNumOpAccess().getGTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNumOpAccess().getLTEnumLiteralDeclaration_3()); }
		('<')
		{ after(grammarAccess.getNumOpAccess().getLTEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getNumOpAccess().getGEEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getNumOpAccess().getGEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getNumOpAccess().getLEEnumLiteralDeclaration_5()); }
		('<=')
		{ after(grammarAccess.getNumOpAccess().getLEEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOpAccess().getEQEnumLiteralDeclaration_0()); }
		('==')
		{ after(grammarAccess.getBoolOpAccess().getEQEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolOpAccess().getNEQEnumLiteralDeclaration_1()); }
		('!=')
		{ after(grammarAccess.getBoolOpAccess().getNEQEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBoolOpAccess().getANDEnumLiteralDeclaration_2()); }
		('and')
		{ after(grammarAccess.getBoolOpAccess().getANDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBoolOpAccess().getOREnumLiteralDeclaration_3()); }
		('or')
		{ after(grammarAccess.getBoolOpAccess().getOREnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Story__Group__0__Impl
	rule__Story__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAccess().getWorldAssignment_0()); }
	(rule__Story__WorldAssignment_0)
	{ after(grammarAccess.getStoryAccess().getWorldAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Story__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoryAccess().getEventsAssignment_1()); }
	(rule__Story__EventsAssignment_1)*
	{ after(grammarAccess.getStoryAccess().getEventsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__World__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__World__Group__0__Impl
	rule__World__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorldAccess().getWorldAction_0()); }
	()
	{ after(grammarAccess.getWorldAccess().getWorldAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__World__Group__1__Impl
	rule__World__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorldAccess().getWorldKeyword_1()); }
	'World'
	{ after(grammarAccess.getWorldAccess().getWorldKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__World__Group__2__Impl
	rule__World__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorldAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getWorldAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__World__Group__3__Impl
	rule__World__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorldAccess().getAttributesAssignment_3()); }
	(rule__World__AttributesAssignment_3)*
	{ after(grammarAccess.getWorldAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__World__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__World__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorldAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getWorldAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttrTypeAssignment_0()); }
	(rule__Attribute__AttrTypeAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getAttrTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
	(rule__Attribute__NameAssignment_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getAbstractAssignment_0()); }
	(rule__Event__AbstractAssignment_0)?
	{ after(grammarAccess.getEventAccess().getAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getEventKeyword_1()); }
	'event'
	{ after(grammarAccess.getEventAccess().getEventKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__2__Impl
	rule__Event__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getNameAssignment_2()); }
	(rule__Event__NameAssignment_2)
	{ after(grammarAccess.getEventAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__3__Impl
	rule__Event__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGroup_3()); }
	(rule__Event__Group_3__0)?
	{ after(grammarAccess.getEventAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__4__Impl
	rule__Event__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__5__Impl
	rule__Event__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getConditionsAssignment_5()); }
	(rule__Event__ConditionsAssignment_5)*
	{ after(grammarAccess.getEventAccess().getConditionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_3__0__Impl
	rule__Event__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getIsKeyword_3_0()); }
	'is'
	{ after(grammarAccess.getEventAccess().getIsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getSuperTypeAssignment_3_1()); }
	(rule__Event__SuperTypeAssignment_3_1)
	{ after(grammarAccess.getEventAccess().getSuperTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRequiresKeyword_0()); }
	'requires'
	{ after(grammarAccess.getConditionAccess().getRequiresKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getBoolExpAssignment_1()); }
	(rule__Condition__BoolExpAssignment_1)
	{ after(grammarAccess.getConditionAccess().getBoolExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolExp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExp__Group_0__0__Impl
	rule__BoolExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getBoolExpAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExp__Group_0__1__Impl
	rule__BoolExp__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpAccess().getLeftAssignment_0_1()); }
	(rule__BoolExp__LeftAssignment_0_1)
	{ after(grammarAccess.getBoolExpAccess().getLeftAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExp__Group_0__2__Impl
	rule__BoolExp__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getBoolExpAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExp__Group_0__3__Impl
	rule__BoolExp__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpAccess().getBoolOpAssignment_0_3()); }
	(rule__BoolExp__BoolOpAssignment_0_3)
	{ after(grammarAccess.getBoolExpAccess().getBoolOpAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExp__Group_0__4__Impl
	rule__BoolExp__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpAccess().getLeftParenthesisKeyword_0_4()); }
	'('
	{ after(grammarAccess.getBoolExpAccess().getLeftParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExp__Group_0__5__Impl
	rule__BoolExp__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpAccess().getRightAssignment_0_5()); }
	(rule__BoolExp__RightAssignment_0_5)
	{ after(grammarAccess.getBoolExpAccess().getRightAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExp__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpAccess().getRightParenthesisKeyword_0_6()); }
	')'
	{ after(grammarAccess.getBoolExpAccess().getRightParenthesisKeyword_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryBoolExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryBoolExp__Group__0__Impl
	rule__BinaryBoolExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryBoolExpAccess().getLeftAssignment_0()); }
	(rule__BinaryBoolExp__LeftAssignment_0)
	{ after(grammarAccess.getBinaryBoolExpAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryBoolExp__Group__1__Impl
	rule__BinaryBoolExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryBoolExpAccess().getBoolOpAssignment_1()); }
	(rule__BinaryBoolExp__BoolOpAssignment_1)
	{ after(grammarAccess.getBinaryBoolExpAccess().getBoolOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryBoolExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryBoolExpAccess().getRightAssignment_2()); }
	(rule__BinaryBoolExp__RightAssignment_2)
	{ after(grammarAccess.getBinaryBoolExpAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryQntyExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryQntyExp__Group__0__Impl
	rule__BinaryQntyExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryQntyExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryQntyExpAccess().getLeftAssignment_0()); }
	(rule__BinaryQntyExp__LeftAssignment_0)
	{ after(grammarAccess.getBinaryQntyExpAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryQntyExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryQntyExp__Group__1__Impl
	rule__BinaryQntyExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryQntyExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryQntyExpAccess().getNumOpAssignment_1()); }
	(rule__BinaryQntyExp__NumOpAssignment_1)
	{ after(grammarAccess.getBinaryQntyExpAccess().getNumOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryQntyExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryQntyExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryQntyExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryQntyExpAccess().getRightAssignment_2()); }
	(rule__BinaryQntyExp__RightAssignment_2)
	{ after(grammarAccess.getBinaryQntyExpAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NegateBoolExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegateBoolExp__Group__0__Impl
	rule__NegateBoolExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegateBoolExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegateBoolExpAccess().getNotKeyword_0()); }
	'not'
	{ after(grammarAccess.getNegateBoolExpAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegateBoolExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NegateBoolExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegateBoolExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegateBoolExpAccess().getBoolExpParserRuleCall_1()); }
	ruleBoolExp
	{ after(grammarAccess.getNegateBoolExpAccess().getBoolExpParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Story__WorldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryAccess().getWorldWorldParserRuleCall_0_0()); }
		ruleWorld
		{ after(grammarAccess.getStoryAccess().getWorldWorldParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Story__EventsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoryAccess().getEventsEventParserRuleCall_1_0()); }
		ruleEvent
		{ after(grammarAccess.getStoryAccess().getEventsEventParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__World__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorldAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getWorldAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AttrTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAttrTypeAttrTypeEnumRuleCall_0_0()); }
		ruleAttrType
		{ after(grammarAccess.getAttributeAccess().getAttrTypeAttrTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__AbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getEventAccess().getAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getEventAccess().getAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getEventAccess().getAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__SuperTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getSuperTypeEventCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getEventAccess().getSuperTypeEventIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEventAccess().getSuperTypeEventIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getEventAccess().getSuperTypeEventCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__ConditionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getConditionsConditionParserRuleCall_5_0()); }
		ruleCondition
		{ after(grammarAccess.getEventAccess().getConditionsConditionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__BoolExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getBoolExpBoolExpParserRuleCall_1_0()); }
		ruleBoolExp
		{ after(grammarAccess.getConditionAccess().getBoolExpBoolExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__LeftAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpAccess().getLeftBoolExpParserRuleCall_0_1_0()); }
		ruleBoolExp
		{ after(grammarAccess.getBoolExpAccess().getLeftBoolExpParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__BoolOpAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpAccess().getBoolOpBoolOpEnumRuleCall_0_3_0()); }
		ruleBoolOp
		{ after(grammarAccess.getBoolExpAccess().getBoolOpBoolOpEnumRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__RightAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpAccess().getRightBoolExpParserRuleCall_0_5_0()); }
		ruleBoolExp
		{ after(grammarAccess.getBoolExpAccess().getRightBoolExpParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__BinaryBoolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpAccess().getBinaryBoolBinaryBoolExpParserRuleCall_1_0()); }
		ruleBinaryBoolExp
		{ after(grammarAccess.getBoolExpAccess().getBinaryBoolBinaryBoolExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__BinaryQntyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpAccess().getBinaryQntyBinaryQntyExpParserRuleCall_2_0()); }
		ruleBinaryQntyExp
		{ after(grammarAccess.getBoolExpAccess().getBinaryQntyBinaryQntyExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__NegateBoolExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpAccess().getNegateBoolExpNegateBoolExpParserRuleCall_3_0()); }
		ruleNegateBoolExp
		{ after(grammarAccess.getBoolExpAccess().getNegateBoolExpNegateBoolExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExp__UnaryBoolAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpAccess().getUnaryBoolUnaryBoolExpParserRuleCall_4_0()); }
		ruleUnaryBoolExp
		{ after(grammarAccess.getBoolExpAccess().getUnaryBoolUnaryBoolExpParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExp__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryBoolExpAccess().getLeftUnaryBoolExpParserRuleCall_0_0()); }
		ruleUnaryBoolExp
		{ after(grammarAccess.getBinaryBoolExpAccess().getLeftUnaryBoolExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExp__BoolOpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryBoolExpAccess().getBoolOpBoolOpEnumRuleCall_1_0()); }
		ruleBoolOp
		{ after(grammarAccess.getBinaryBoolExpAccess().getBoolOpBoolOpEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBoolExp__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryBoolExpAccess().getRightUnaryBoolExpParserRuleCall_2_0()); }
		ruleUnaryBoolExp
		{ after(grammarAccess.getBinaryBoolExpAccess().getRightUnaryBoolExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryQntyExp__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryQntyExpAccess().getLeftUnaryQuantityExpParserRuleCall_0_0()); }
		ruleUnaryQuantityExp
		{ after(grammarAccess.getBinaryQntyExpAccess().getLeftUnaryQuantityExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryQntyExp__NumOpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryQntyExpAccess().getNumOpNumOpEnumRuleCall_1_0()); }
		ruleNumOp
		{ after(grammarAccess.getBinaryQntyExpAccess().getNumOpNumOpEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryQntyExp__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryQntyExpAccess().getRightUnaryQuantityExpParserRuleCall_2_0()); }
		ruleUnaryQuantityExp
		{ after(grammarAccess.getBinaryQntyExpAccess().getRightUnaryQuantityExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryBoolExp__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryBoolExpAccess().getIdAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getUnaryBoolExpAccess().getIdAttributeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnaryBoolExpAccess().getIdAttributeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getUnaryBoolExpAccess().getIdAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryBoolExp__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryBoolExpAccess().getValueBooleanValueEnumRuleCall_1_0()); }
		ruleBooleanValue
		{ after(grammarAccess.getUnaryBoolExpAccess().getValueBooleanValueEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryQuantityExp__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryQuantityExpAccess().getIdAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getUnaryQuantityExpAccess().getIdAttributeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnaryQuantityExpAccess().getIdAttributeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getUnaryQuantityExpAccess().getIdAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryQuantityExp__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryQuantityExpAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getUnaryQuantityExpAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
