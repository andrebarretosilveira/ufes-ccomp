/**
 * generated by Xtext 2.17.0
 */
package br.ufes.inf.storyGen.impl;

import br.ufes.inf.storyGen.BoolExp;
import br.ufes.inf.storyGen.Condition;
import br.ufes.inf.storyGen.StoryGenPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Condition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufes.inf.storyGen.impl.ConditionImpl#getBoolExp <em>Bool Exp</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConditionImpl extends MinimalEObjectImpl.Container implements Condition
{
  /**
   * The cached value of the '{@link #getBoolExp() <em>Bool Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoolExp()
   * @generated
   * @ordered
   */
  protected BoolExp boolExp;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConditionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StoryGenPackage.Literals.CONDITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BoolExp getBoolExp()
  {
    return boolExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBoolExp(BoolExp newBoolExp, NotificationChain msgs)
  {
    BoolExp oldBoolExp = boolExp;
    boolExp = newBoolExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StoryGenPackage.CONDITION__BOOL_EXP, oldBoolExp, newBoolExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBoolExp(BoolExp newBoolExp)
  {
    if (newBoolExp != boolExp)
    {
      NotificationChain msgs = null;
      if (boolExp != null)
        msgs = ((InternalEObject)boolExp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StoryGenPackage.CONDITION__BOOL_EXP, null, msgs);
      if (newBoolExp != null)
        msgs = ((InternalEObject)newBoolExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StoryGenPackage.CONDITION__BOOL_EXP, null, msgs);
      msgs = basicSetBoolExp(newBoolExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StoryGenPackage.CONDITION__BOOL_EXP, newBoolExp, newBoolExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StoryGenPackage.CONDITION__BOOL_EXP:
        return basicSetBoolExp(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StoryGenPackage.CONDITION__BOOL_EXP:
        return getBoolExp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StoryGenPackage.CONDITION__BOOL_EXP:
        setBoolExp((BoolExp)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StoryGenPackage.CONDITION__BOOL_EXP:
        setBoolExp((BoolExp)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StoryGenPackage.CONDITION__BOOL_EXP:
        return boolExp != null;
    }
    return super.eIsSet(featureID);
  }

} //ConditionImpl
