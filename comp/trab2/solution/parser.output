Gramática

    0 $accept: program $end

    1 program: func_dcl_list

    2 func_dcl_list: func_dcl_list func_dcl
    3              | func_dcl

    4 func_dcl: func_header func_body

    5 func_header: ret_type ID LPAR params RPAR

    6 func_body: LCUR opt_var_decl opt_stmt_list RCUR

    7 opt_var_decl: %empty
    8             | var_decl_list

    9 opt_stmt_list: %empty
   10              | stmt_list

   11 ret_type: INT
   12         | VOID

   13 params: VOID
   14       | param_list

   15 param_list: INT ID
   16           | INT ID LBRAC RBRAC

   17 var_decl_list: var_decl_list var_decl
   18              | var_decl

   19 var_decl: INT ID SEMI
   20         | INT ID LBRAC NUM RBRAC SEMI

   21 stmt_list: stmt_list stmt
   22          | stmt

   23 stmt: assign_stmt
   24     | if_stmt
   25     | while_stmt
   26     | return_stmt
   27     | func_call SEMI

   28 assign_stmt: lval ASSIGN arith_expr SEMI

   29 lval: ID
   30     | ID LBRAC NUM RBRAC
   31     | ID LBRAC ID RBRAC

   32 if_stmt: IF LPAR bool_expr RPAR block
   33        | IF LPAR bool_expr RPAR block ELSE block

   34 block: LCUR opt_stmt_list RCUR

   35 while_stmt: WHILE LPAR bool_expr RPAR block

   36 return_stmt: RETURN SEMI
   37            | RETURN arith_expr SEMI

   38 func_call: output_call
   39          | write_call
   40          | user_func_call

   41 input_call: INPUT LPAR RPAR

   42 output_call: OUTPUT LPAR arith_expr RPAR

   43 write_call: WRITE LPAR STRING RPAR

   44 user_func_call: ID LPAR opt_arg_list RPAR

   45 opt_arg_list: EPS
   46             | arg_list

   47 arg_list: arg_list COMMA arith_expr
   48         | arith_expr

   49 bool_expr: arith_expr bool_op arith_expr

   50 arith_expr: arith_expr PLUS arith_expr
   51           | arith_expr MINUS arith_expr
   52           | arith_expr TIMES arith_expr
   53           | arith_expr OVER arith_expr
   54           | LPAR arith_expr RPAR
   55           | lval
   56           | input_call
   57           | user_func_call
   58           | NUM

   59 bool_op: LT
   60        | LEQ
   61        | GT
   62        | GEQ
   63        | EQ
   64        | NEQ


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
NUM (258) 20 30 58
ID (259) 5 15 16 19 20 29 30 31 44
IF (260) 32 33
ELSE (261) 33
WHILE (262) 35
WRITE (263) 43
RETURN (264) 36 37
ASSIGN (265) 28
SEMI (266) 19 20 27 28 36 37
INPUT (267) 41
OUTPUT (268) 42
COMMA (269) 47
EPS (270) 45
LPAR (271) 5 32 33 35 41 42 43 44 54
RPAR (272) 5 32 33 35 41 42 43 44 54
LBRAC (273) 16 20 30 31
RBRAC (274) 16 20 30 31
LCUR (275) 6 34
RCUR (276) 6 34
STRING (277) 43
INT (278) 11 15 16 19 20
VOID (279) 12 13
LT (280) 59
LEQ (281) 60
GT (282) 61
GEQ (283) 62
EQ (284) 63
NEQ (285) 64
PLUS (286) 50
MINUS (287) 51
TIMES (288) 52
OVER (289) 53


Não terminais com as regras onde eles aparecem

$accept (35)
    à esquerda: 0
program (36)
    à esquerda: 1, à direita: 0
func_dcl_list (37)
    à esquerda: 2 3, à direita: 1 2
func_dcl (38)
    à esquerda: 4, à direita: 2 3
func_header (39)
    à esquerda: 5, à direita: 4
func_body (40)
    à esquerda: 6, à direita: 4
opt_var_decl (41)
    à esquerda: 7 8, à direita: 6
opt_stmt_list (42)
    à esquerda: 9 10, à direita: 6 34
ret_type (43)
    à esquerda: 11 12, à direita: 5
params (44)
    à esquerda: 13 14, à direita: 5
param_list (45)
    à esquerda: 15 16, à direita: 14
var_decl_list (46)
    à esquerda: 17 18, à direita: 8 17
var_decl (47)
    à esquerda: 19 20, à direita: 17 18
stmt_list (48)
    à esquerda: 21 22, à direita: 10 21
stmt (49)
    à esquerda: 23 24 25 26 27, à direita: 21 22
assign_stmt (50)
    à esquerda: 28, à direita: 23
lval (51)
    à esquerda: 29 30 31, à direita: 28 55
if_stmt (52)
    à esquerda: 32 33, à direita: 24
block (53)
    à esquerda: 34, à direita: 32 33 35
while_stmt (54)
    à esquerda: 35, à direita: 25
return_stmt (55)
    à esquerda: 36 37, à direita: 26
func_call (56)
    à esquerda: 38 39 40, à direita: 27
input_call (57)
    à esquerda: 41, à direita: 56
output_call (58)
    à esquerda: 42, à direita: 38
write_call (59)
    à esquerda: 43, à direita: 39
user_func_call (60)
    à esquerda: 44, à direita: 40 57
opt_arg_list (61)
    à esquerda: 45 46, à direita: 44
arg_list (62)
    à esquerda: 47 48, à direita: 46 47
bool_expr (63)
    à esquerda: 49, à direita: 32 33 35
arith_expr (64)
    à esquerda: 50 51 52 53 54 55 56 57 58, à direita: 28 37 42 47
    48 49 50 51 52 53 54
bool_op (65)
    à esquerda: 59 60 61 62 63 64, à direita: 49


Estado 0

    0 $accept: . program $end

    INT   deslocar, e ir ao estado 1
    VOID  deslocar, e ir ao estado 2

    program        ir ao estado 3
    func_dcl_list  ir ao estado 4
    func_dcl       ir ao estado 5
    func_header    ir ao estado 6
    ret_type       ir ao estado 7


Estado 1

   11 ret_type: INT .

    $padrão  reduzir usando a regra 11 (ret_type)


Estado 2

   12 ret_type: VOID .

    $padrão  reduzir usando a regra 12 (ret_type)


Estado 3

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 8


Estado 4

    1 program: func_dcl_list .
    2 func_dcl_list: func_dcl_list . func_dcl

    INT   deslocar, e ir ao estado 1
    VOID  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 1 (program)

    func_dcl     ir ao estado 9
    func_header  ir ao estado 6
    ret_type     ir ao estado 7


Estado 5

    3 func_dcl_list: func_dcl .

    $padrão  reduzir usando a regra 3 (func_dcl_list)


Estado 6

    4 func_dcl: func_header . func_body

    LCUR  deslocar, e ir ao estado 10

    func_body  ir ao estado 11


Estado 7

    5 func_header: ret_type . ID LPAR params RPAR

    ID  deslocar, e ir ao estado 12


Estado 8

    0 $accept: program $end .

    $padrão  aceitar


Estado 9

    2 func_dcl_list: func_dcl_list func_dcl .

    $padrão  reduzir usando a regra 2 (func_dcl_list)


Estado 10

    6 func_body: LCUR . opt_var_decl opt_stmt_list RCUR

    INT  deslocar, e ir ao estado 13

    $padrão  reduzir usando a regra 7 (opt_var_decl)

    opt_var_decl   ir ao estado 14
    var_decl_list  ir ao estado 15
    var_decl       ir ao estado 16


Estado 11

    4 func_dcl: func_header func_body .

    $padrão  reduzir usando a regra 4 (func_dcl)


Estado 12

    5 func_header: ret_type ID . LPAR params RPAR

    LPAR  deslocar, e ir ao estado 17


Estado 13

   19 var_decl: INT . ID SEMI
   20         | INT . ID LBRAC NUM RBRAC SEMI

    ID  deslocar, e ir ao estado 18


Estado 14

    6 func_body: LCUR opt_var_decl . opt_stmt_list RCUR

    ID      deslocar, e ir ao estado 19
    IF      deslocar, e ir ao estado 20
    WHILE   deslocar, e ir ao estado 21
    WRITE   deslocar, e ir ao estado 22
    RETURN  deslocar, e ir ao estado 23
    OUTPUT  deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 9 (opt_stmt_list)

    opt_stmt_list   ir ao estado 25
    stmt_list       ir ao estado 26
    stmt            ir ao estado 27
    assign_stmt     ir ao estado 28
    lval            ir ao estado 29
    if_stmt         ir ao estado 30
    while_stmt      ir ao estado 31
    return_stmt     ir ao estado 32
    func_call       ir ao estado 33
    output_call     ir ao estado 34
    write_call      ir ao estado 35
    user_func_call  ir ao estado 36


Estado 15

    8 opt_var_decl: var_decl_list .
   17 var_decl_list: var_decl_list . var_decl

    INT  deslocar, e ir ao estado 13

    $padrão  reduzir usando a regra 8 (opt_var_decl)

    var_decl  ir ao estado 37


Estado 16

   18 var_decl_list: var_decl .

    $padrão  reduzir usando a regra 18 (var_decl_list)


Estado 17

    5 func_header: ret_type ID LPAR . params RPAR

    INT   deslocar, e ir ao estado 38
    VOID  deslocar, e ir ao estado 39

    params      ir ao estado 40
    param_list  ir ao estado 41


Estado 18

   19 var_decl: INT ID . SEMI
   20         | INT ID . LBRAC NUM RBRAC SEMI

    SEMI   deslocar, e ir ao estado 42
    LBRAC  deslocar, e ir ao estado 43


Estado 19

   29 lval: ID .
   30     | ID . LBRAC NUM RBRAC
   31     | ID . LBRAC ID RBRAC
   44 user_func_call: ID . LPAR opt_arg_list RPAR

    LPAR   deslocar, e ir ao estado 44
    LBRAC  deslocar, e ir ao estado 45

    $padrão  reduzir usando a regra 29 (lval)


Estado 20

   32 if_stmt: IF . LPAR bool_expr RPAR block
   33        | IF . LPAR bool_expr RPAR block ELSE block

    LPAR  deslocar, e ir ao estado 46


Estado 21

   35 while_stmt: WHILE . LPAR bool_expr RPAR block

    LPAR  deslocar, e ir ao estado 47


Estado 22

   43 write_call: WRITE . LPAR STRING RPAR

    LPAR  deslocar, e ir ao estado 48


Estado 23

   36 return_stmt: RETURN . SEMI
   37            | RETURN . arith_expr SEMI

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    SEMI   deslocar, e ir ao estado 50
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 56


Estado 24

   42 output_call: OUTPUT . LPAR arith_expr RPAR

    LPAR  deslocar, e ir ao estado 57


Estado 25

    6 func_body: LCUR opt_var_decl opt_stmt_list . RCUR

    RCUR  deslocar, e ir ao estado 58


Estado 26

   10 opt_stmt_list: stmt_list .
   21 stmt_list: stmt_list . stmt

    ID      deslocar, e ir ao estado 19
    IF      deslocar, e ir ao estado 20
    WHILE   deslocar, e ir ao estado 21
    WRITE   deslocar, e ir ao estado 22
    RETURN  deslocar, e ir ao estado 23
    OUTPUT  deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 10 (opt_stmt_list)

    stmt            ir ao estado 59
    assign_stmt     ir ao estado 28
    lval            ir ao estado 29
    if_stmt         ir ao estado 30
    while_stmt      ir ao estado 31
    return_stmt     ir ao estado 32
    func_call       ir ao estado 33
    output_call     ir ao estado 34
    write_call      ir ao estado 35
    user_func_call  ir ao estado 36


Estado 27

   22 stmt_list: stmt .

    $padrão  reduzir usando a regra 22 (stmt_list)


Estado 28

   23 stmt: assign_stmt .

    $padrão  reduzir usando a regra 23 (stmt)


Estado 29

   28 assign_stmt: lval . ASSIGN arith_expr SEMI

    ASSIGN  deslocar, e ir ao estado 60


Estado 30

   24 stmt: if_stmt .

    $padrão  reduzir usando a regra 24 (stmt)


Estado 31

   25 stmt: while_stmt .

    $padrão  reduzir usando a regra 25 (stmt)


Estado 32

   26 stmt: return_stmt .

    $padrão  reduzir usando a regra 26 (stmt)


Estado 33

   27 stmt: func_call . SEMI

    SEMI  deslocar, e ir ao estado 61


Estado 34

   38 func_call: output_call .

    $padrão  reduzir usando a regra 38 (func_call)


Estado 35

   39 func_call: write_call .

    $padrão  reduzir usando a regra 39 (func_call)


Estado 36

   40 func_call: user_func_call .

    $padrão  reduzir usando a regra 40 (func_call)


Estado 37

   17 var_decl_list: var_decl_list var_decl .

    $padrão  reduzir usando a regra 17 (var_decl_list)


Estado 38

   15 param_list: INT . ID
   16           | INT . ID LBRAC RBRAC

    ID  deslocar, e ir ao estado 62


Estado 39

   13 params: VOID .

    $padrão  reduzir usando a regra 13 (params)


Estado 40

    5 func_header: ret_type ID LPAR params . RPAR

    RPAR  deslocar, e ir ao estado 63


Estado 41

   14 params: param_list .

    $padrão  reduzir usando a regra 14 (params)


Estado 42

   19 var_decl: INT ID SEMI .

    $padrão  reduzir usando a regra 19 (var_decl)


Estado 43

   20 var_decl: INT ID LBRAC . NUM RBRAC SEMI

    NUM  deslocar, e ir ao estado 64


Estado 44

   44 user_func_call: ID LPAR . opt_arg_list RPAR

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    EPS    deslocar, e ir ao estado 65
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    opt_arg_list    ir ao estado 66
    arg_list        ir ao estado 67
    arith_expr      ir ao estado 68


Estado 45

   30 lval: ID LBRAC . NUM RBRAC
   31     | ID LBRAC . ID RBRAC

    NUM  deslocar, e ir ao estado 69
    ID   deslocar, e ir ao estado 70


Estado 46

   32 if_stmt: IF LPAR . bool_expr RPAR block
   33        | IF LPAR . bool_expr RPAR block ELSE block

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    bool_expr       ir ao estado 71
    arith_expr      ir ao estado 72


Estado 47

   35 while_stmt: WHILE LPAR . bool_expr RPAR block

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    bool_expr       ir ao estado 73
    arith_expr      ir ao estado 72


Estado 48

   43 write_call: WRITE LPAR . STRING RPAR

    STRING  deslocar, e ir ao estado 74


Estado 49

   58 arith_expr: NUM .

    $padrão  reduzir usando a regra 58 (arith_expr)


Estado 50

   36 return_stmt: RETURN SEMI .

    $padrão  reduzir usando a regra 36 (return_stmt)


Estado 51

   41 input_call: INPUT . LPAR RPAR

    LPAR  deslocar, e ir ao estado 75


Estado 52

   54 arith_expr: LPAR . arith_expr RPAR

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 76


Estado 53

   55 arith_expr: lval .

    $padrão  reduzir usando a regra 55 (arith_expr)


Estado 54

   56 arith_expr: input_call .

    $padrão  reduzir usando a regra 56 (arith_expr)


Estado 55

   57 arith_expr: user_func_call .

    $padrão  reduzir usando a regra 57 (arith_expr)


Estado 56

   37 return_stmt: RETURN arith_expr . SEMI
   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr

    SEMI   deslocar, e ir ao estado 77
    PLUS   deslocar, e ir ao estado 78
    MINUS  deslocar, e ir ao estado 79
    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81


Estado 57

   42 output_call: OUTPUT LPAR . arith_expr RPAR

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 82


Estado 58

    6 func_body: LCUR opt_var_decl opt_stmt_list RCUR .

    $padrão  reduzir usando a regra 6 (func_body)


Estado 59

   21 stmt_list: stmt_list stmt .

    $padrão  reduzir usando a regra 21 (stmt_list)


Estado 60

   28 assign_stmt: lval ASSIGN . arith_expr SEMI

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 83


Estado 61

   27 stmt: func_call SEMI .

    $padrão  reduzir usando a regra 27 (stmt)


Estado 62

   15 param_list: INT ID .
   16           | INT ID . LBRAC RBRAC

    LBRAC  deslocar, e ir ao estado 84

    $padrão  reduzir usando a regra 15 (param_list)


Estado 63

    5 func_header: ret_type ID LPAR params RPAR .

    $padrão  reduzir usando a regra 5 (func_header)


Estado 64

   20 var_decl: INT ID LBRAC NUM . RBRAC SEMI

    RBRAC  deslocar, e ir ao estado 85


Estado 65

   45 opt_arg_list: EPS .

    $padrão  reduzir usando a regra 45 (opt_arg_list)


Estado 66

   44 user_func_call: ID LPAR opt_arg_list . RPAR

    RPAR  deslocar, e ir ao estado 86


Estado 67

   46 opt_arg_list: arg_list .
   47 arg_list: arg_list . COMMA arith_expr

    COMMA  deslocar, e ir ao estado 87

    $padrão  reduzir usando a regra 46 (opt_arg_list)


Estado 68

   48 arg_list: arith_expr .
   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr

    PLUS   deslocar, e ir ao estado 78
    MINUS  deslocar, e ir ao estado 79
    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 48 (arg_list)


Estado 69

   30 lval: ID LBRAC NUM . RBRAC

    RBRAC  deslocar, e ir ao estado 88


Estado 70

   31 lval: ID LBRAC ID . RBRAC

    RBRAC  deslocar, e ir ao estado 89


Estado 71

   32 if_stmt: IF LPAR bool_expr . RPAR block
   33        | IF LPAR bool_expr . RPAR block ELSE block

    RPAR  deslocar, e ir ao estado 90


Estado 72

   49 bool_expr: arith_expr . bool_op arith_expr
   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr

    LT     deslocar, e ir ao estado 91
    LEQ    deslocar, e ir ao estado 92
    GT     deslocar, e ir ao estado 93
    GEQ    deslocar, e ir ao estado 94
    EQ     deslocar, e ir ao estado 95
    NEQ    deslocar, e ir ao estado 96
    PLUS   deslocar, e ir ao estado 78
    MINUS  deslocar, e ir ao estado 79
    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81

    bool_op  ir ao estado 97


Estado 73

   35 while_stmt: WHILE LPAR bool_expr . RPAR block

    RPAR  deslocar, e ir ao estado 98


Estado 74

   43 write_call: WRITE LPAR STRING . RPAR

    RPAR  deslocar, e ir ao estado 99


Estado 75

   41 input_call: INPUT LPAR . RPAR

    RPAR  deslocar, e ir ao estado 100


Estado 76

   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr
   54           | LPAR arith_expr . RPAR

    RPAR   deslocar, e ir ao estado 101
    PLUS   deslocar, e ir ao estado 78
    MINUS  deslocar, e ir ao estado 79
    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81


Estado 77

   37 return_stmt: RETURN arith_expr SEMI .

    $padrão  reduzir usando a regra 37 (return_stmt)


Estado 78

   50 arith_expr: arith_expr PLUS . arith_expr

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 102


Estado 79

   51 arith_expr: arith_expr MINUS . arith_expr

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 103


Estado 80

   52 arith_expr: arith_expr TIMES . arith_expr

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 104


Estado 81

   53 arith_expr: arith_expr OVER . arith_expr

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 105


Estado 82

   42 output_call: OUTPUT LPAR arith_expr . RPAR
   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr

    RPAR   deslocar, e ir ao estado 106
    PLUS   deslocar, e ir ao estado 78
    MINUS  deslocar, e ir ao estado 79
    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81


Estado 83

   28 assign_stmt: lval ASSIGN arith_expr . SEMI
   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr

    SEMI   deslocar, e ir ao estado 107
    PLUS   deslocar, e ir ao estado 78
    MINUS  deslocar, e ir ao estado 79
    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81


Estado 84

   16 param_list: INT ID LBRAC . RBRAC

    RBRAC  deslocar, e ir ao estado 108


Estado 85

   20 var_decl: INT ID LBRAC NUM RBRAC . SEMI

    SEMI  deslocar, e ir ao estado 109


Estado 86

   44 user_func_call: ID LPAR opt_arg_list RPAR .

    $padrão  reduzir usando a regra 44 (user_func_call)


Estado 87

   47 arg_list: arg_list COMMA . arith_expr

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 110


Estado 88

   30 lval: ID LBRAC NUM RBRAC .

    $padrão  reduzir usando a regra 30 (lval)


Estado 89

   31 lval: ID LBRAC ID RBRAC .

    $padrão  reduzir usando a regra 31 (lval)


Estado 90

   32 if_stmt: IF LPAR bool_expr RPAR . block
   33        | IF LPAR bool_expr RPAR . block ELSE block

    LCUR  deslocar, e ir ao estado 111

    block  ir ao estado 112


Estado 91

   59 bool_op: LT .

    $padrão  reduzir usando a regra 59 (bool_op)


Estado 92

   60 bool_op: LEQ .

    $padrão  reduzir usando a regra 60 (bool_op)


Estado 93

   61 bool_op: GT .

    $padrão  reduzir usando a regra 61 (bool_op)


Estado 94

   62 bool_op: GEQ .

    $padrão  reduzir usando a regra 62 (bool_op)


Estado 95

   63 bool_op: EQ .

    $padrão  reduzir usando a regra 63 (bool_op)


Estado 96

   64 bool_op: NEQ .

    $padrão  reduzir usando a regra 64 (bool_op)


Estado 97

   49 bool_expr: arith_expr bool_op . arith_expr

    NUM    deslocar, e ir ao estado 49
    ID     deslocar, e ir ao estado 19
    INPUT  deslocar, e ir ao estado 51
    LPAR   deslocar, e ir ao estado 52

    lval            ir ao estado 53
    input_call      ir ao estado 54
    user_func_call  ir ao estado 55
    arith_expr      ir ao estado 113


Estado 98

   35 while_stmt: WHILE LPAR bool_expr RPAR . block

    LCUR  deslocar, e ir ao estado 111

    block  ir ao estado 114


Estado 99

   43 write_call: WRITE LPAR STRING RPAR .

    $padrão  reduzir usando a regra 43 (write_call)


Estado 100

   41 input_call: INPUT LPAR RPAR .

    $padrão  reduzir usando a regra 41 (input_call)


Estado 101

   54 arith_expr: LPAR arith_expr RPAR .

    $padrão  reduzir usando a regra 54 (arith_expr)


Estado 102

   50 arith_expr: arith_expr . PLUS arith_expr
   50           | arith_expr PLUS arith_expr .
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr

    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 50 (arith_expr)


Estado 103

   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   51           | arith_expr MINUS arith_expr .
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr

    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 51 (arith_expr)


Estado 104

   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   52           | arith_expr TIMES arith_expr .
   53           | arith_expr . OVER arith_expr

    $padrão  reduzir usando a regra 52 (arith_expr)


Estado 105

   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr
   53           | arith_expr OVER arith_expr .

    $padrão  reduzir usando a regra 53 (arith_expr)


Estado 106

   42 output_call: OUTPUT LPAR arith_expr RPAR .

    $padrão  reduzir usando a regra 42 (output_call)


Estado 107

   28 assign_stmt: lval ASSIGN arith_expr SEMI .

    $padrão  reduzir usando a regra 28 (assign_stmt)


Estado 108

   16 param_list: INT ID LBRAC RBRAC .

    $padrão  reduzir usando a regra 16 (param_list)


Estado 109

   20 var_decl: INT ID LBRAC NUM RBRAC SEMI .

    $padrão  reduzir usando a regra 20 (var_decl)


Estado 110

   47 arg_list: arg_list COMMA arith_expr .
   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr

    PLUS   deslocar, e ir ao estado 78
    MINUS  deslocar, e ir ao estado 79
    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 47 (arg_list)


Estado 111

   34 block: LCUR . opt_stmt_list RCUR

    ID      deslocar, e ir ao estado 19
    IF      deslocar, e ir ao estado 20
    WHILE   deslocar, e ir ao estado 21
    WRITE   deslocar, e ir ao estado 22
    RETURN  deslocar, e ir ao estado 23
    OUTPUT  deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 9 (opt_stmt_list)

    opt_stmt_list   ir ao estado 115
    stmt_list       ir ao estado 26
    stmt            ir ao estado 27
    assign_stmt     ir ao estado 28
    lval            ir ao estado 29
    if_stmt         ir ao estado 30
    while_stmt      ir ao estado 31
    return_stmt     ir ao estado 32
    func_call       ir ao estado 33
    output_call     ir ao estado 34
    write_call      ir ao estado 35
    user_func_call  ir ao estado 36


Estado 112

   32 if_stmt: IF LPAR bool_expr RPAR block .
   33        | IF LPAR bool_expr RPAR block . ELSE block

    ELSE  deslocar, e ir ao estado 116

    $padrão  reduzir usando a regra 32 (if_stmt)


Estado 113

   49 bool_expr: arith_expr bool_op arith_expr .
   50 arith_expr: arith_expr . PLUS arith_expr
   51           | arith_expr . MINUS arith_expr
   52           | arith_expr . TIMES arith_expr
   53           | arith_expr . OVER arith_expr

    PLUS   deslocar, e ir ao estado 78
    MINUS  deslocar, e ir ao estado 79
    TIMES  deslocar, e ir ao estado 80
    OVER   deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 49 (bool_expr)


Estado 114

   35 while_stmt: WHILE LPAR bool_expr RPAR block .

    $padrão  reduzir usando a regra 35 (while_stmt)


Estado 115

   34 block: LCUR opt_stmt_list . RCUR

    RCUR  deslocar, e ir ao estado 117


Estado 116

   33 if_stmt: IF LPAR bool_expr RPAR block ELSE . block

    LCUR  deslocar, e ir ao estado 111

    block  ir ao estado 118


Estado 117

   34 block: LCUR opt_stmt_list RCUR .

    $padrão  reduzir usando a regra 34 (block)


Estado 118

   33 if_stmt: IF LPAR bool_expr RPAR block ELSE block .

    $padrão  reduzir usando a regra 33 (if_stmt)
